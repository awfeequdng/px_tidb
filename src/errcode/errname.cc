#include <string>
#include <unordered_map>
#include <vector>

#include "errcode/errcode.hh"
#include "parser/mysql/errcode.hh"

using namespace std;

namespace errcode {

unordered_map<uint16_t, shared_ptr<mysql::ErrMessage>> MySQLErrName = {
    {ErrHashchk, mysql::Message("hashchk", {})},
    {ErrNisamchk, mysql::Message("isamchk", {})},
    {ErrNo, mysql::Message("NO", {})},
    {ErrYes, mysql::Message("YES", {})},
    {ErrCantCreateFile, mysql::Message("Can't create file '%-.200s' (errno: %d - %s)", {})},
    {ErrCantCreateTable, mysql::Message("Can't create table '%-.200s' (errno: %d)", {})},
    {ErrCantCreateDB, mysql::Message("Can't create database '%-.192s' (errno: %d)", {})},
    {ErrDBCreateExists, mysql::Message("Can't create database '%-.192s'; database exists", {})},
    {ErrDBDropExists, mysql::Message("Can't drop database '%-.192s'; database doesn't exist", {})},
    {ErrDBDropDelete, mysql::Message("Error dropping database (can't delete '%-.192s', errno: %d)", {})},
    {ErrDBDropRmdir, mysql::Message("Error dropping database (can't rmdir '%-.192s', errno: %d)", {})},
    {ErrCantDeleteFile, mysql::Message("Error on delete of '%-.192s' (errno: %d - %s)", {})},
    {ErrCantFindSystemRec, mysql::Message("Can't read record in system table", {})},
    {ErrCantGetStat, mysql::Message("Can't get status of '%-.200s' (errno: %d - %s)", {})},
    {ErrCantGetWd, mysql::Message("Can't get working directory (errno: %d - %s)", {})},
    {ErrCantLock, mysql::Message("Can't lock file (errno: %d - %s)", {})},
    {ErrCantOpenFile, mysql::Message("Can't open file: '%-.200s' (errno: %d - %s)", {})},
    {ErrFileNotFound, mysql::Message("Can't find file: '%-.200s' (errno: %d - %s)", {})},
    {ErrCantReadDir, mysql::Message("Can't read dir of '%-.192s' (errno: %d - %s)", {})},
    {ErrCantSetWd, mysql::Message("Can't change dir to '%-.192s' (errno: %d - %s)", {})},
    {ErrCheckread, mysql::Message("Record has changed since last read in table '%-.192s'", {})},
    {ErrDiskFull, mysql::Message("Disk full (%s); waiting for someone to free some space... (errno: %d - %s)", {})},
    {ErrDupKey, mysql::Message("Can't write; duplicate key in table '%-.192s'", {})},
    {ErrErrorOnClose, mysql::Message("Error on close of '%-.192s' (errno: %d - %s)", {})},
    {ErrErrorOnRead, mysql::Message("Error reading file '%-.200s' (errno: %d - %s)", {})},
    {ErrErrorOnRename, mysql::Message("Error on rename of '%-.210s' to '%-.210s' (errno: %d - %s)", {})},
    {ErrErrorOnWrite, mysql::Message("Error writing file '%-.200s' (errno: %d - %s)", {})},
    {ErrFileUsed, mysql::Message("'%-.192s' is locked against change", {})},
    {ErrFilsortAbort, mysql::Message("Sort aborted", {})},
    {ErrFormNotFound, mysql::Message("View '%-.192s' doesn't exist for '%-.192s'", {})},
    {ErrGetErrno, mysql::Message("Got error %d from storage engine", {})},
    {ErrIllegalHa, mysql::Message("Table storage engine for '%-.192s' doesn't have this option", {})},
    {ErrKeyNotFound, mysql::Message("Can't find record in '%-.192s'", {})},
    {ErrNotFormFile, mysql::Message("Incorrect information in file: '%-.200s'", {})},
    {ErrNotKeyFile, mysql::Message("Incorrect key file for table '%-.200s'; try to repair it", {})},
    {ErrOldKeyFile, mysql::Message("Old key file for table '%-.192s'; repair it!", {})},
    {ErrOpenAsReadonly, mysql::Message("Table '%-.192s' is read only", {})},
    {ErrOutofMemory, mysql::Message("Out of memory; restart server and try again (needed %d bytes)", {})},
    {ErrOutOfSortMemory, mysql::Message("Out of sort memory, consider increasing server sort buffer size", {})},
    {ErrUnexpectedEOF, mysql::Message("Unexpected EOF found when reading file '%-.192s' (errno: %d - %s)", {})},
    {ErrConCount, mysql::Message("Too many connections", {})},
    {ErrOutOfResources,
     mysql::Message("Out of memory; check if mysqld or some other process uses all available memory; if not, you may "
                    "have to use 'ulimit' to allow mysqld to use more memory or you can add more swap space",
                    {})},
    {ErrBadHost, mysql::Message("Can't get hostname for your address", {})},
    {ErrHandshake, mysql::Message("Bad handshake", {})},
    {ErrDBaccessDenied, mysql::Message("Access denied for user '%-.48s'@'%-.255s' to database '%-.192s'", {})},
    {ErrAccessDenied, mysql::Message("Access denied for user '%-.48s'@'%-.255s' (using password: %s)", {})},
    {ErrNoDB, mysql::Message("No database selected", {})},
    {ErrUnknownCom, mysql::Message("Unknown command", {})},
    {ErrBadNull, mysql::Message("Column '%-.192s' cannot be null", {})},
    {ErrBadDB, mysql::Message("Unknown database '%-.192s'", {})},
    {ErrTableExists, mysql::Message("Table '%-.192s' already exists", {})},
    {ErrBadTable, mysql::Message("Unknown table '%-.100s'", {})},
    {ErrNonUniq, mysql::Message("Column '%-.192s' in %-.192s is ambiguous", {})},
    {ErrServerShutdown, mysql::Message("Server shutdown in progress", {})},
    {ErrBadField, mysql::Message("Unknown column '%-.192s' in '%-.192s'", {})},
    {ErrFieldNotInGroupBy,
     mysql::Message(
         "Expression #%d of %s is not in GROUP BY clause and contains nonaggregated column '%s' which is not "
         "functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by",
         {})},
    {ErrWrongGroupField, mysql::Message("Can't group on '%-.192s'", {})},
    {ErrWrongSumSelect, mysql::Message("Statement has sum functions and columns in same statement", {})},
    {ErrWrongValueCount, mysql::Message("Column count doesn't match value count", {})},
    {ErrTooLongIdent, mysql::Message("Identifier name '%-.100s' is too long", {})},
    {ErrDupFieldName, mysql::Message("Duplicate column name '%-.192s'", {})},
    {ErrDupKeyName, mysql::Message("Duplicate key name '%-.192s'", {})},
    {ErrDupEntry, mysql::Message("Duplicate entry '%-.64s' for key '%-.192s'", {0})},
    {ErrWrongFieldSpec, mysql::Message("Incorrect column specifier for column '%-.192s'", {})},
    {ErrParse, mysql::Message("%s %s", {})},
    {ErrEmptyQuery, mysql::Message("Query was empty", {})},
    {ErrNonuniqTable, mysql::Message("Not unique table/alias: '%-.192s'", {})},
    {ErrInvalidDefault, mysql::Message("Invalid default value for '%-.192s'", {})},
    {ErrMultiplePriKey, mysql::Message("Multiple primary key defined", {})},
    {ErrTooManyKeys, mysql::Message("Too many keys specified; max %d keys allowed", {})},
    {ErrTooManyKeyParts, mysql::Message("Too many key parts specified; max %d parts allowed", {})},
    {ErrTooLongKey, mysql::Message("Specified key was too long; max key length is %d bytes", {})},
    {ErrKeyColumnDoesNotExits, mysql::Message("Key column '%-.192s' doesn't exist in table", {})},
    {ErrBlobUsedAsKey,
     mysql::Message("BLOB column '%-.192s' can't be used in key specification with the used table type", {})},
    {ErrTooBigFieldlength,
     mysql::Message("Column length too big for column '%-.192s' (max = %d); use BLOB or TEXT instead", {})},
    {ErrWrongAutoKey,
     mysql::Message("Incorrect table definition; there can be only one auto column and it must be defined as a key",
                    {})},
    {ErrReady, mysql::Message("%s: ready for connections.\nVersion: '%s'  socket: '%s'  port: %d", {})},
    {ErrNormalShutdown, mysql::Message("%s: Normal shutdown\n", {})},
    {ErrGotSignal, mysql::Message("%s: Got signal %d. Aborting!\n", {})},
    {ErrShutdownComplete, mysql::Message("%s: Shutdown complete\n", {})},
    {ErrForcingClose, mysql::Message("%s: Forcing close of thread %d  user: '%-.48s'\n", {})},
    {ErrIpsock, mysql::Message("Can't create IP socket", {})},
    {ErrNoSuchIndex,
     mysql::Message("Table '%-.192s' has no index like the one used in CREATE INDEX; recreate the table", {})},
    {ErrWrongFieldTerminators,
     mysql::Message("Field separator argument is not what is expected; check the manual", {})},
    {ErrBlobsAndNoTerminated,
     mysql::Message("You can't use fixed rowlength with BLOBs; please use 'fields terminated by'", {})},
    {ErrTextFileNotReadable,
     mysql::Message("The file '%-.128s' must be in the database directory or be readable by all", {})},
    {ErrFileExists, mysql::Message("File '%-.200s' already exists", {})},
    {ErrLoadInfo, mysql::Message("Records: %d  Deleted: %d  Skipped: %d  Warnings: %d", {})},
    {ErrAlterInfo, mysql::Message("Records: %d  Duplicates: %d", {})},
    {ErrWrongSubKey, mysql::Message("Incorrect prefix key; the used key part isn't a string, the used length is longer "
                                    "than the key part, or the storage engine doesn't support unique prefix keys",
                                    {})},
    {ErrCantRemoveAllFields,
     mysql::Message("You can't delete all columns with ALTER TABLE; use DROP TABLE instead", {})},
    {ErrCantDropFieldOrKey, mysql::Message("Can't DROP '%-.192s'; check that column/key exists", {})},
    {ErrInsertInfo, mysql::Message("Records: %d  Duplicates: %d  Warnings: %d", {})},
    {ErrUpdateTableUsed, mysql::Message("You can't specify target table '%-.192s' for update in FROM clause", {})},
    {ErrNoSuchThread, mysql::Message("Unknown thread id: %d", {})},
    {ErrKillDenied, mysql::Message("You are not owner of thread %d", {})},
    {ErrNoTablesUsed, mysql::Message("No tables used", {})},
    {ErrTooBigSet, mysql::Message("Too many strings for column %-.192s and SET", {})},
    {ErrNoUniqueLogFile, mysql::Message("Can't generate a unique log-filename %-.200s.(1-999)\n", {})},
    {ErrTableNotLockedForWrite, mysql::Message("Table '%-.192s' was locked with a READ lock and can't be updated", {})},
    {ErrTableNotLocked, mysql::Message("Table '%-.192s' was not locked with LOCK TABLES", {})},
    {ErrBlobCantHaveDefault, mysql::Message("BLOB/TEXT/JSON column '%-.192s' can't have a default value", {})},
    {ErrWrongDBName, mysql::Message("Incorrect database name '%-.100s'", {})},
    {ErrWrongTableName, mysql::Message("Incorrect table name '%-.100s'", {})},
    {ErrTooBigSelect, mysql::Message("The SELECT would examine more than MAXJOINSIZE rows; check your WHERE and use "
                                     "SET SQLBIGSELECTS=1 or SET MAXJOINSIZE=# if the SELECT is okay",
                                     {})},
    {ErrUnknown, mysql::Message("Unknown error", {})},
    {ErrUnknownProcedure, mysql::Message("Unknown procedure '%-.192s'", {})},
    {ErrWrongParamcountToProcedure, mysql::Message("Incorrect parameter count to procedure '%-.192s'", {})},
    {ErrWrongParametersToProcedure, mysql::Message("Incorrect parameters to procedure '%-.192s'", {})},
    {ErrUnknownTable, mysql::Message("Unknown table '%-.192s' in %-.32s", {})},
    {ErrFieldSpecifiedTwice, mysql::Message("Column '%-.192s' specified twice", {})},
    {ErrInvalidGroupFuncUse, mysql::Message("Invalid use of group function", {})},
    {ErrUnsupportedExtension,
     mysql::Message("Table '%-.192s' uses an extension that doesn't exist in this MySQL version", {})},
    {ErrTableMustHaveColumns, mysql::Message("A table must have at least 1 column", {})},
    {ErrRecordFileFull, mysql::Message("The table '%-.192s' is full", {})},
    {ErrUnknownCharacterSet, mysql::Message("Unknown character set: '%-.64s'", {})},
    {ErrTooManyTables, mysql::Message("Too many tables; MySQL can only use %d tables in a join", {})},
    {ErrTooManyFields, mysql::Message("Too many columns", {})},
    {ErrTooBigRowsize,
     mysql::Message("Row size too large. The maximum row size for the used table type, not counting BLOBs, is %d. This "
                    "includes storage overhead, check the manual. You have to change some columns to TEXT or BLOBs",
                    {})},
    {ErrStackOverrun, mysql::Message("Thread stack overrun:  Used: %d of a %d stack.  Use 'mysqld --threadStack=#' to "
                                     "specify a bigger stack if needed",
                                     {})},
    {ErrWrongOuterJoin, mysql::Message("Cross dependency found in OUTER JOIN; examine your ON conditions", {})},
    {ErrNullColumnInIndex, mysql::Message("Table handler doesn't support NULL in given index. Please change column "
                                          "'%-.192s' to be NOT NULL or use another handler",
                                          {})},
    {ErrCantFindUdf, mysql::Message("Can't load function '%-.192s'", {})},
    {ErrCantInitializeUdf, mysql::Message("Can't initialize function '%-.192s'; %-.80s", {})},
    {ErrUdfNoPaths, mysql::Message("No paths allowed for shared library", {})},
    {ErrUdfExists, mysql::Message("Function '%-.192s' already exists", {})},
    {ErrCantOpenLibrary, mysql::Message("Can't open shared library '%-.192s' (errno: %d %-.128s)", {})},
    {ErrCantFindDlEntry, mysql::Message("Can't find symbol '%-.128s' in library", {})},
    {ErrFunctionNotDefined, mysql::Message("Function '%-.192s' is not defined", {})},
    {ErrHostIsBlocked,
     mysql::Message(
         "Host '%-.255s' is blocked because of many connection errors; unblock with 'mysqladmin flush-hosts'", {})},
    {ErrHostNotPrivileged, mysql::Message("Host '%-.255s' is not allowed to connect to this MySQL server", {})},
    {ErrPasswordAnonymousUser,
     mysql::Message("You are using MySQL as an anonymous user and anonymous users are not allowed to change passwords",
                    {})},
    {ErrPasswordNotAllowed,
     mysql::Message(
         "You must have privileges to update tables in the mysql database to be able to change passwords for others",
         {})},
    {ErrPasswordNoMatch, mysql::Message("Can't find any matching row in the user table", {})},
    {ErrUpdateInfo, mysql::Message("Rows matched: %d  Changed: %d  Warnings: %d", {})},
    {ErrCantCreateThread, mysql::Message("Can't create a new thread (errno %d); if you are not out of available "
                                         "memory, you can consult the manual for a possible OS-dependent bug",
                                         {})},
    {ErrWrongValueCountOnRow, mysql::Message("Column count doesn't match value count at row %d", {})},
    {ErrCantReopenTable, mysql::Message("Can't reopen table: '%-.192s'", {})},
    {ErrInvalidUseOfNull, mysql::Message("Invalid use of NULL value", {})},
    {ErrRegexp, mysql::Message("Got error '%-.64s' from regexp", {})},
    {ErrMixOfGroupFuncAndFields, mysql::Message("Mixing of GROUP columns (MIN(),MAX(),COUNT(),...) with no GROUP "
                                                "columns is illegal if there is no GROUP BY clause",
                                                {})},
    {ErrNonexistingGrant, mysql::Message("There is no such grant defined for user '%-.48s' on host '%-.255s'", {})},
    {ErrTableaccessDenied, mysql::Message("%-.128s command denied to user '%-.48s'@'%-.255s' for table '%-.64s'", {})},
    {ErrColumnaccessDenied,
     mysql::Message("%-.16s command denied to user '%-.48s'@'%-.255s' for column '%-.192s' in table '%-.192s'", {})},
    {ErrIllegalGrantForTable,
     mysql::Message("Illegal GRANT/REVOKE command; please consult the manual to see which privileges can be used", {})},
    {ErrGrantWrongHostOrUser, mysql::Message("The host or user argument to GRANT is too long", {})},
    {ErrNoSuchTable, mysql::Message("Table '%-.192s.%-.192s' doesn't exist", {})},
    {ErrNonexistingTableGrant,
     mysql::Message("There is no such grant defined for user '%-.48s' on host '%-.255s' on table '%-.192s'", {})},
    {ErrNotAllowedCommand, mysql::Message("The used command is not allowed with this MySQL version", {})},
    {ErrSyntax, mysql::Message("You have an error in your SQL syntax; check the manual that corresponds to your MySQL "
                               "server version for the right syntax to use",
                               {})},
    {ErrDelayedCantChangeLock,
     mysql::Message("Delayed insert thread couldn't get requested lock for table %-.192s", {})},
    {ErrTooManyDelayedThreads, mysql::Message("Too many delayed threads in use", {})},
    {ErrAbortingConnection, mysql::Message("Aborted connection %d to db: '%-.192s' user: '%-.48s' (%-.64s)", {})},
    {ErrNetPacketTooLarge, mysql::Message("Got a packet bigger than 'maxAllowedPacket' bytes", {})},
    {ErrNetReadErrorFromPipe, mysql::Message("Got a read error from the connection pipe", {})},
    {ErrNetFcntl, mysql::Message("Got an error from fcntl()", {})},
    {ErrNetPacketsOutOfOrder, mysql::Message("Got packets out of order", {})},
    {ErrNetUncompress, mysql::Message("Couldn't uncompress communication packet", {})},
    {ErrNetRead, mysql::Message("Got an error reading communication packets", {})},
    {ErrNetReadInterrupted, mysql::Message("Got timeout reading communication packets", {})},
    {ErrNetErrorOnWrite, mysql::Message("Got an error writing communication packets", {})},
    {ErrNetWriteInterrupted, mysql::Message("Got timeout writing communication packets", {})},
    {ErrTooLongString, mysql::Message("Result string is longer than 'maxAllowedPacket' bytes", {})},
    {ErrTableCantHandleBlob, mysql::Message("The used table type doesn't support BLOB/TEXT columns", {})},
    {ErrTableCantHandleAutoIncrement, mysql::Message("The used table type doesn't support AUTOINCREMENT columns", {})},
    {ErrDelayedInsertTableLocked,
     mysql::Message("INSERT DELAYED can't be used with table '%-.192s' because it is locked with LOCK TABLES", {})},
    {ErrWrongColumnName, mysql::Message("Incorrect column name '%-.100s'", {})},
    {ErrWrongKeyColumn, mysql::Message("The used storage engine can't index column '%-.192s'", {})},
    {ErrWrongMrgTable,
     mysql::Message(
         "Unable to open underlying table which is differently defined or of non-MyISAM type or doesn't exist", {})},
    {ErrDupUnique, mysql::Message("Can't write, because of unique constraint, to table '%-.192s'", {})},
    {ErrBlobKeyWithoutLength,
     mysql::Message("BLOB/TEXT column '%-.192s' used in key specification without a key length", {})},
    {ErrPrimaryCantHaveNull,
     mysql::Message("All parts of a PRIMARY KEY must be NOT NULL; if you need NULL in a key, use UNIQUE instead", {})},
    {ErrTooManyRows, mysql::Message("Result consisted of more than one row", {})},
    {ErrRequiresPrimaryKey, mysql::Message("This table type requires a primary key", {})},
    {ErrNoRaidCompiled, mysql::Message("This version of MySQL is not compiled with RAID support", {})},
    {ErrUpdateWithoutKeyInSafeMode,
     mysql::Message(
         "You are using safe update mode and you tried to update a table without a WHERE that uses a KEY column", {})},
    {ErrKeyDoesNotExist, mysql::Message("Key '%-.192s' doesn't exist in table '%-.192s'", {})},
    {ErrCheckNoSuchTable, mysql::Message("Can't open table", {})},
    {ErrCheckNotImplemented, mysql::Message("The storage engine for the table doesn't support %s", {})},
    {ErrCantDoThisDuringAnTransaction,
     mysql::Message("You are not allowed to execute this command in a transaction", {})},
    {ErrErrorDuringCommit, mysql::Message("Got error %d during COMMIT", {})},
    {ErrErrorDuringRollback, mysql::Message("Got error %d during ROLLBACK", {})},
    {ErrErrorDuringFlushLogs, mysql::Message("Got error %d during FLUSHLOGS", {})},
    {ErrErrorDuringCheckpoint, mysql::Message("Got error %d during CHECKPOINT", {})},
    {ErrNewAbortingConnection,
     mysql::Message("Aborted connection %d to db: '%-.192s' user: '%-.48s' host: '%-.255s' (%-.64s)", {})},
    {ErrDumpNotImplemented, mysql::Message("The storage engine for the table does not support binary table dump", {})},
    {ErrIndexRebuild, mysql::Message("Failed rebuilding the index of  dumped table '%-.192s'", {})},
    {ErrFtMatchingKeyNotFound, mysql::Message("Can't find FULLTEXT index matching the column list", {})},
    {ErrLockOrActiveTransaction,
     mysql::Message("Can't execute the given command because you have active locked tables or an active transaction",
                    {})},
    {ErrUnknownSystemVariable, mysql::Message("Unknown system variable '%-.64s'", {})},
    {ErrCrashedOnUsage, mysql::Message("Table '%-.192s' is marked as crashed and should be repaired", {})},
    {ErrCrashedOnRepair,
     mysql::Message("Table '%-.192s' is marked as crashed and last (automatic?) repair failed", {})},
    {ErrWarningNotCompleteRollback,
     mysql::Message("Some non-transactional changed tables couldn't be rolled back", {})},
    {ErrTransCacheFull, mysql::Message("Multi-statement transaction required more than 'maxBinlogCacheSize' bytes of "
                                       "storage; increase this mysqld variable and try again",
                                       {})},
    {ErrTooManyUserConnections,
     mysql::Message("User %-.64s already has more than 'maxUserConnections' active connections", {})},
    {ErrSetConstantsOnly, mysql::Message("You may only use constant expressions with SET", {})},
    {ErrLockWaitTimeout, mysql::Message("Lock wait timeout exceeded; try restarting transaction", {})},
    {ErrLockTableFull, mysql::Message("The total number of locks exceeds the lock table size", {})},
    {ErrReadOnlyTransaction,
     mysql::Message("Update locks cannot be acquired during a READ UNCOMMITTED transaction", {})},
    {ErrDropDBWithReadLock, mysql::Message("DROP DATABASE not allowed while thread is holding global read lock", {})},
    {ErrCreateDBWithReadLock,
     mysql::Message("CREATE DATABASE not allowed while thread is holding global read lock", {})},
    {ErrWrongArguments, mysql::Message("Incorrect arguments to %s", {})},
    {ErrNoPermissionToCreateUser, mysql::Message("'%-.48s'@'%-.255s' is not allowed to create new users", {})},
    {ErrUnionTablesInDifferentDir,
     mysql::Message("Incorrect table definition; all MERGE tables must be in the same database", {})},
    {ErrLockDeadlock, mysql::Message("Deadlock found when trying to get lock; try restarting transaction", {})},
    {ErrTableCantHandleFt, mysql::Message("The used table type doesn't support FULLTEXT indexes", {})},
    {ErrCannotAddForeign, mysql::Message("Cannot add foreign key constraint", {})},
    {ErrNoReferencedRow, mysql::Message("Cannot add or update a child row: a foreign key constraint fails", {})},
    {ErrRowIsReferenced, mysql::Message("Cannot delete or update a parent row: a foreign key constraint fails", {})},
    {ErrErrorWhenExecutingCommand, mysql::Message("Error when executing command %s: %-.128s", {})},
    {ErrWrongUsage, mysql::Message("Incorrect usage of %s and %s", {})},
    {ErrWrongNumberOfColumnsInSelect,
     mysql::Message("The used SELECT statements have a different number of columns", {})},
    {ErrCantUpdateWithReadlock, mysql::Message("Can't execute the query because you have a conflicting read lock", {})},
    {ErrMixingNotAllowed, mysql::Message("Mixing of transactional and non-transactional tables is disabled", {})},
    {ErrDupArgument, mysql::Message("Option '%s' used twice in statement", {})},
    {ErrUserLimitReached, mysql::Message("User '%-.64s' has exceeded the '%s' resource (current value: %d)", {})},
    {ErrSpecificAccessDenied,
     mysql::Message("Access denied; you need (at least one of) the %-.128s privilege(s) for this operation", {})},
    {ErrLocalVariable, mysql::Message("Variable '%-.64s' is a SESSION variable and can't be used with SET GLOBAL", {})},
    {ErrGlobalVariable, mysql::Message("Variable '%-.64s' is a GLOBAL variable and should be set with SET GLOBAL", {})},
    {ErrNoDefault, mysql::Message("Variable '%-.64s' doesn't have a default value", {})},
    {ErrWrongValueForVar, mysql::Message("Variable '%-.64s' can't be set to the value of '%-.200s'", {})},
    {ErrWrongTypeForVar, mysql::Message("Incorrect argument type to variable '%-.64s'", {})},
    {ErrVarCantBeRead, mysql::Message("Variable '%-.64s' can only be set, not read", {})},
    {ErrCantUseOptionHere, mysql::Message("Incorrect usage/placement of '%s'", {})},
    {ErrNotSupportedYet, mysql::Message("This version of TiDB doesn't yet support '%s'", {})},
    {ErrIncorrectGlobalLocalVar, mysql::Message("Variable '%-.192s' is a %s variable", {})},
    {ErrWrongFkDef, mysql::Message("Incorrect foreign key definition for '%-.192s': %s", {})},
    {ErrKeyRefDoNotMatchTableRef, mysql::Message("Key reference and table reference don't match", {})},
    {ErrOperandColumns, mysql::Message("Operand should contain %d column(s)", {})},
    {ErrSubqueryNo1Row, mysql::Message("Subquery returns more than 1 row", {})},
    {ErrUnknownStmtHandler, mysql::Message("Unknown prepared statement handler (%.*s) given to %s", {})},
    {ErrCorruptHelpDB, mysql::Message("Help database is corrupt or does not exist", {})},
    {ErrCyclicReference, mysql::Message("Cyclic reference on subqueries", {})},
    {ErrAutoConvert, mysql::Message("Converting column '%s' from %s to %s", {})},
    {ErrIllegalReference, mysql::Message("Reference '%-.64s' not supported (%s)", {})},
    {ErrDerivedMustHaveAlias, mysql::Message("Every derived table must have its own alias", {})},
    {ErrSelectReduced, mysql::Message("Select %d was reduced during optimization", {})},
    {ErrTablenameNotAllowedHere, mysql::Message("Table '%s' from one of the %ss cannot be used in %s", {})},
    {ErrNotSupportedAuthMode,
     mysql::Message(
         "Client does not support authentication protocol requested by server; consider upgrading MySQL client", {})},
    {ErrSpatialCantHaveNull, mysql::Message("All parts of a SPATIAL index must be NOT NULL", {})},
    {ErrCollationCharsetMismatch, mysql::Message("COLLATION '%s' is not valid for CHARACTER SET '%s'", {})},
    {ErrTooBigForUncompress, mysql::Message("Uncompressed data size too large; the maximum size is %d (probably, "
                                            "length of uncompressed data was corrupted)",
                                            {})},
    {ErrZlibZMem, mysql::Message("ZLIB: Not enough memory", {})},
    {ErrZlibZBuf,
     mysql::Message("ZLIB: Not enough room in the output buffer (probably, length of uncompressed data was corrupted)",
                    {})},
    {ErrZlibZData, mysql::Message("ZLIB: Input data corrupted", {})},
    {ErrCutValueGroupConcat, mysql::Message("Some rows were cut by GROUPCONCAT(%s)", {0})},
    {ErrWarnTooFewRecords, mysql::Message("Row %d doesn't contain data for all columns", {})},
    {ErrWarnTooManyRecords,
     mysql::Message("Row %d was truncated; it contained more data than there were input columns", {})},
    {ErrWarnNullToNotnull,
     mysql::Message("Column set to default value; NULL supplied to NOT NULL column '%s' at row %d", {})},
    {ErrWarnDataOutOfRange, mysql::Message("Out of range value for column '%s' at row %d", {})},
    {WarnDataTruncated, mysql::Message("Data truncated for column '%s' at row %d", {})},
    {ErrWarnUsingOtherHandler, mysql::Message("Using storage engine %s for table '%s'", {})},
    {ErrCantAggregate2collations,
     mysql::Message("Illegal mix of collations (%s,%s) and (%s,%s) for operation '%s'", {})},
    {ErrDropUser, mysql::Message("Cannot drop one or more of the requested users", {})},
    {ErrRevokeGrants, mysql::Message("Can't revoke all privileges for one or more of the requested users", {})},
    {ErrCantAggregate3collations,
     mysql::Message("Illegal mix of collations (%s,%s), (%s,%s), (%s,%s) for operation '%s'", {})},
    {ErrCantAggregateNcollations, mysql::Message("Illegal mix of collations for operation '%s'", {})},
    {ErrVariableIsNotStruct,
     mysql::Message("Variable '%-.64s' is not a variable component (can't be used as XXXX.variableName)", {})},
    {ErrUnknownCollation, mysql::Message("Unknown collation: '%-.64s'", {})},
    {ErrServerIsInSecureAuthMode,
     mysql::Message("Server is running in --secure-auth mode, but '%s'@'%s' has a password in the old format; please "
                    "change the password to the new format",
                    {})},
    {ErrWarnFieldResolved,
     mysql::Message("Field or reference '%-.192s%s%-.192s%s%-.192s' of SELECT #%d was resolved in SELECT #%d", {})},
    {ErrUntilCondIgnored, mysql::Message("SQL thread is not to be started so UNTIL options are ignored", {})},
    {ErrWrongNameForIndex, mysql::Message("Incorrect index name '%-.100s'", {})},
    {ErrWrongNameForCatalog, mysql::Message("Incorrect catalog name '%-.100s'", {})},
    {ErrWarnQcResize, mysql::Message("Query cache failed to set size %d; new query cache size is %d", {})},
    {ErrBadFtColumn, mysql::Message("Column '%-.192s' cannot be part of FULLTEXT index", {})},
    {ErrUnknownKeyCache, mysql::Message("Unknown key cache '%-.100s'", {})},
    {ErrWarnHostnameWontWork,
     mysql::Message(
         "MySQL is started in --skip-name-resolve mode; you must restart it without this switch for this grant to work",
         {})},
    {ErrUnknownStorageEngine, mysql::Message("Unknown storage engine '%s'", {})},
    {ErrWarnDeprecatedSyntax,
     mysql::Message("'%s' is deprecated and will be removed in a future release. Please use %s instead", {})},
    {ErrNonUpdatableTable, mysql::Message("The target table %-.100s of the %s is not updatable", {})},
    {ErrFeatureDisabled,
     mysql::Message("The '%s' feature is disabled; you need MySQL built with '%s' to have it working", {})},
    {ErrOptionPreventsStatement,
     mysql::Message("The MySQL server is running with the %s option so it cannot execute this statement", {})},
    {ErrDuplicatedValueInType, mysql::Message("Column '%-.100s' has duplicated value '%-.64s' in %s", {1})},
    {ErrTruncatedWrongValue, mysql::Message("Truncated incorrect %-.64s value: '%-.128s'", {1})},
    {ErrTooMuchAutoTimestampCols, mysql::Message("Incorrect table definition; there can be only one TIMESTAMP column "
                                                 "with CURRENTTIMESTAMP in DEFAULT or ON UPDATE clause",
                                                 {})},
    {ErrInvalidOnUpdate, mysql::Message("Invalid ON UPDATE clause for '%-.192s' column", {})},
    {ErrUnsupportedPs, mysql::Message("This command is not supported in the prepared statement protocol yet", {})},
    {ErrGetErrmsg, mysql::Message("Got error %d '%-.100s' from %s", {})},
    {ErrGetTemporaryErrmsg, mysql::Message("Got temporary error %d '%-.100s' from %s", {})},
    {ErrUnknownTimeZone, mysql::Message("Unknown or incorrect time zone: '%-.64s'", {})},
    {ErrWarnInvalidTimestamp, mysql::Message("Invalid TIMESTAMP value in column '%s' at row %d", {})},
    {ErrInvalidCharacterString, mysql::Message("Invalid %s character string: '%.64s'", {1})},
    {ErrWarnAllowedPacketOverflowed,
     mysql::Message("Result of %s() was larger than max_allowed_packet (%d) - truncated", {})},
    {ErrConflictingDeclarations, mysql::Message("Conflicting declarations: '%s%s' and '%s%s'", {})},
    {ErrSpNoRecursiveCreate, mysql::Message("Can't create a %s from within another stored routine", {})},
    {ErrSpAlreadyExists, mysql::Message("%s %s already exists", {})},
    {ErrSpDoesNotExist, mysql::Message("%s %s does not exist", {})},
    {ErrSpDropFailed, mysql::Message("Failed to DROP %s %s", {})},
    {ErrSpStoreFailed, mysql::Message("Failed to CREATE %s %s", {})},
    {ErrSpLilabelMismatch, mysql::Message("%s with no matching label: %s", {})},
    {ErrSpLabelRedefine, mysql::Message("Redefining label %s", {})},
    {ErrSpLabelMismatch, mysql::Message("End-label %s without match", {})},
    {ErrSpUninitVar, mysql::Message("Referring to uninitialized variable %s", {})},
    {ErrSpBadselect, mysql::Message("PROCEDURE %s can't return a result set in the given context", {})},
    {ErrSpBadreturn, mysql::Message("RETURN is only allowed in a FUNCTION", {})},
    {ErrSpBadstatement, mysql::Message("%s is not allowed in stored procedures", {})},
    {ErrUpdateLogDeprecatedIgnored,
     mysql::Message("The update log is deprecated and replaced by the binary log; SET SQLLOGUPDATE has been ignored.",
                    {})},
    {ErrUpdateLogDeprecatedTranslated, mysql::Message("The update log is deprecated and replaced by the binary log; "
                                                      "SET SQLLOGUPDATE has been translated to SET SQLLOGBIN.",
                                                      {})},
    {ErrQueryInterrupted, mysql::Message("Query execution was interrupted", {})},
    {ErrSpWrongNoOfArgs, mysql::Message("Incorrect number of arguments for %s %s; expected %d, got %d", {})},
    {ErrSpCondMismatch, mysql::Message("Undefined CONDITION: %s", {})},
    {ErrSpNoreturn, mysql::Message("No RETURN found in FUNCTION %s", {})},
    {ErrSpNoreturnend, mysql::Message("FUNCTION %s ended without RETURN", {})},
    {ErrSpBadCursorQuery, mysql::Message("Cursor statement must be a SELECT", {})},
    {ErrSpBadCursorSelect, mysql::Message("Cursor SELECT must not have INTO", {})},
    {ErrSpCursorMismatch, mysql::Message("Undefined CURSOR: %s", {})},
    {ErrSpCursorAlreadyOpen, mysql::Message("Cursor is already open", {})},
    {ErrSpCursorNotOpen, mysql::Message("Cursor is not open", {})},
    {ErrSpUndeclaredVar, mysql::Message("Undeclared variable: %s", {})},
    {ErrSpWrongNoOfFetchArgs, mysql::Message("Incorrect number of FETCH variables", {})},
    {ErrSpFetchNoData, mysql::Message("No data - zero rows fetched, selected, or processed", {})},
    {ErrSpDupParam, mysql::Message("Duplicate parameter: %s", {})},
    {ErrSpDupVar, mysql::Message("Duplicate variable: %s", {})},
    {ErrSpDupCond, mysql::Message("Duplicate condition: %s", {})},
    {ErrSpDupCurs, mysql::Message("Duplicate cursor: %s", {})},
    {ErrSpCantAlter, mysql::Message("Failed to ALTER %s %s", {})},
    {ErrSpSubselectNyi, mysql::Message("Subquery value not supported", {})},
    {ErrStmtNotAllowedInSfOrTrg, mysql::Message("%s is not allowed in stored function or trigger", {})},
    {ErrSpVarcondAfterCurshndlr,
     mysql::Message("Variable or condition declaration after cursor or handler declaration", {})},
    {ErrSpCursorAfterHandler, mysql::Message("Cursor declaration after handler declaration", {})},
    {ErrSpCaseNotFound, mysql::Message("Case not found for CASE statement", {})},
    {ErrFparserTooBigFile, mysql::Message("Configuration file '%-.192s' is too big", {})},
    {ErrFparserBadHeader, mysql::Message("Malformed file type header in file '%-.192s'", {})},
    {ErrFparserEOFInComment, mysql::Message("Unexpected end of file while parsing comment '%-.200s'", {})},
    {ErrFparserErrorInParameter, mysql::Message("Error while parsing parameter '%-.192s' (line: '%-.192s')", {})},
    {ErrFparserEOFInUnknownParameter,
     mysql::Message("Unexpected end of file while skipping unknown parameter '%-.192s'", {})},
    {ErrViewNoExplain, mysql::Message("EXPLAIN/SHOW can not be issued; lacking privileges for underlying table", {})},
    {ErrFrmUnknownType, mysql::Message("File '%-.192s' has unknown type '%-.64s' in its header", {})},
    {ErrWrongObject, mysql::Message("'%-.192s.%-.192s' is not %s", {})},
    {ErrNonupdateableColumn, mysql::Message("Column '%-.192s' is not updatable", {})},
    {ErrViewSelectDerived, mysql::Message("View's SELECT contains a subquery in the FROM clause", {})},
    {ErrViewSelectClause, mysql::Message("View's SELECT contains a '%s' clause", {})},
    {ErrViewSelectVariable, mysql::Message("View's SELECT contains a variable or parameter", {})},
    {ErrViewSelectTmptable, mysql::Message("View's SELECT refers to a temporary table '%-.192s'", {})},
    {ErrViewWrongList, mysql::Message("In definition of view, derived table or common table expression, SELECT list "
                                      "and column names list have different column counts",
                                      {})},
    {ErrWarnViewMerge,
     mysql::Message("View merge algorithm can't be used here for now (assumed undefined algorithm)", {})},
    {ErrWarnViewWithoutKey,
     mysql::Message("View being updated does not have complete key of underlying table in it", {})},
    {ErrViewInvalid, mysql::Message("View '%-.192s.%-.192s' references invalid table(s) or column(s) or function(s) or "
                                    "definer/invoker of view lack rights to use them",
                                    {})},
    {ErrSpNoDropSp, mysql::Message("Can't drop or alter a %s from within another stored routine", {})},
    {ErrSpGotoInHndlr, mysql::Message("GOTO is not allowed in a stored procedure handler", {})},
    {ErrTrgAlreadyExists, mysql::Message("Trigger already exists", {})},
    {ErrTrgDoesNotExist, mysql::Message("Trigger does not exist", {})},
    {ErrTrgOnViewOrTempTable, mysql::Message("Trigger's '%-.192s' is view or temporary table", {})},
    {ErrTrgCantChangeRow, mysql::Message("Updating of %s row is not allowed in %strigger", {})},
    {ErrTrgNoSuchRowInTrg, mysql::Message("There is no %s row in %s trigger", {})},
    {ErrNoDefaultForField, mysql::Message("Field '%-.192s' doesn't have a default value", {})},
    {ErrDivisionByZero, mysql::Message("Division by 0", {})},
    {ErrTruncatedWrongValueForField,
     mysql::Message("Incorrect %-.32s value: '%-.128s' for column '%.192s' at row %d", {0, 1})},
    {ErrIllegalValueForType, mysql::Message("Illegal %s '%-.192s' value found during parsing", {1})},
    {ErrViewNonupdCheck, mysql::Message("CHECK OPTION on non-updatable view '%-.192s.%-.192s'", {})},
    {ErrViewCheckFailed, mysql::Message("CHECK OPTION failed '%-.192s.%-.192s'", {})},
    {ErrProcaccessDenied, mysql::Message("%-.16s command denied to user '%-.48s'@'%-.255s' for routine '%-.192s'", {})},
    {ErrRelayLogFail, mysql::Message("Failed purging old relay logs: %s", {})},
    {ErrPasswdLength, mysql::Message("Password hash should be a %d-digit hexadecimal number", {})},
    {ErrUnknownTargetBinlog, mysql::Message("Target log not found in binlog index", {})},
    {ErrIoErrLogIndexRead, mysql::Message("I/O error reading log index file", {})},
    {ErrBinlogPurgeProhibited, mysql::Message("Server configuration does not permit binlog purge", {})},
    {ErrFseekFail, mysql::Message("Failed on fseek()", {})},
    {ErrBinlogPurgeFatalErr, mysql::Message("Fatal error during log purge", {})},
    {ErrLogInUse, mysql::Message("A purgeable log is in use, will not purge", {})},
    {ErrLogPurgeUnknownErr, mysql::Message("Unknown error during log purge", {})},
    {ErrRelayLogInit, mysql::Message("Failed initializing relay log position: %s", {})},
    {ErrNoBinaryLogging, mysql::Message("You are not using binary logging", {})},
    {ErrReservedSyntax,
     mysql::Message("The '%-.64s' syntax is reserved for purposes internal to the MySQL server", {})},
    {ErrWsasFailed, mysql::Message("WSAStartup Failed", {})},
    {ErrDiffGroupsProc, mysql::Message("Can't handle procedures with different groups yet", {})},
    {ErrNoGroupForProc, mysql::Message("Select must have a group with this procedure", {})},
    {ErrOrderWithProc, mysql::Message("Can't use ORDER clause with this procedure", {})},
    {ErrLoggingProhibitChangingOf,
     mysql::Message("Binary logging and replication forbid changing the global server %s", {})},
    {ErrNoFileMapping, mysql::Message("Can't map file: %-.200s, errno: %d", {})},
    {ErrWrongMagic, mysql::Message("Wrong magic in %-.64s", {})},
    {ErrPsManyParam, mysql::Message("Prepared statement contains too many placeholders", {})},
    {ErrKeyPart0, mysql::Message("Key part '%-.192s' length cannot be 0", {})},
    {ErrViewChecksum, mysql::Message("View text checksum failed", {})},
    {ErrViewMultiupdate,
     mysql::Message("Can not modify more than one base table through a join view '%-.192s.%-.192s'", {})},
    {ErrViewNoInsertFieldList,
     mysql::Message("Can not insert into join view '%-.192s.%-.192s' without fields list", {})},
    {ErrViewDeleteMergeView, mysql::Message("Can not delete from join view '%-.192s.%-.192s'", {})},
    {ErrCannotUser, mysql::Message("Operation %s failed for %.256s", {})},
    {ErrGrantRole, mysql::Message("Unknown authorization ID %.256s", {})},
    {ErrXaerNota, mysql::Message("XAERNOTA: Unknown XID", {})},
    {ErrXaerInval, mysql::Message("XAERINVAL: Invalid arguments (or unsupported command)", {})},
    {ErrXaerRmfail,
     mysql::Message("XAERRMFAIL: The command cannot be executed when global transaction is in the  %.64s state", {})},
    {ErrXaerOutside, mysql::Message("XAEROUTSIDE: Some work is done outside global transaction", {})},
    {ErrXaerRmerr,
     mysql::Message("XAERRMERR: Fatal error occurred in the transaction branch - check your data for consistency", {})},
    {ErrXaRbrollback, mysql::Message("XARBROLLBACK: Transaction branch was rolled back", {})},
    {ErrNonexistingProcGrant,
     mysql::Message("There is no such grant defined for user '%-.48s' on host '%-.255s' on routine '%-.192s'", {})},
    {ErrProcAutoGrantFail, mysql::Message("Failed to grant EXECUTE and ALTER ROUTINE privileges", {})},
    {ErrProcAutoRevokeFail, mysql::Message("Failed to revoke all privileges to dropped routine", {})},
    {ErrDataTooLong, mysql::Message("Data too long for column '%s' at row %d", {})},
    {ErrSpBadSQLstate, mysql::Message("Bad SQLSTATE: '%s'", {})},
    {ErrStartup, mysql::Message("%s: ready for connections.\nVersion: '%s'  socket: '%s'  port: %d  %s", {})},
    {ErrLoadFromFixedSizeRowsToVar, mysql::Message("Can't load value from file with fixed size rows to variable", {})},
    {ErrCantCreateUserWithGrant, mysql::Message("You are not allowed to create a user with GRANT", {})},
    {ErrWrongValueForType, mysql::Message("Incorrect %-.32s value: '%-.128s' for function %-.32s", {})},
    {ErrTableDefChanged, mysql::Message("Table definition has changed, please retry transaction", {})},
    {ErrSpDupHandler, mysql::Message("Duplicate handler declared in the same block", {})},
    {ErrSpNotVarArg,
     mysql::Message(
         "OUT or INOUT argument %d for routine %s is not a variable or NEW pseudo-variable in BEFORE trigger", {})},
    {ErrSpNoRetset, mysql::Message("Not allowed to return a result set from a %s", {})},
    {ErrCantCreateGeometryObject,
     mysql::Message("Cannot get geometry object from data you send to the GEOMETRY field", {})},
    {ErrFailedRoutineBreakBinlog,
     mysql::Message("A routine failed and has neither NO SQL nor READS SQL DATA in its declaration and binary logging "
                    "is enabled; if non-transactional tables were updated, the binary log will miss their changes",
                    {})},
    {ErrBinlogUnsafeRoutine,
     mysql::Message("This function has none of DETERMINISTIC, NO SQL, or READS SQL DATA in its declaration and binary "
                    "logging is enabled (you *might* want to use the less safe logBinTrustFunctionCreators variable)",
                    {})},
    {ErrBinlogCreateRoutineNeedSuper,
     mysql::Message("You do not have the SUPER privilege and binary logging is enabled (you *might* want to use the "
                    "less safe logBinTrustFunctionCreators variable)",
                    {})},
    {ErrExecStmtWithOpenCursor, mysql::Message("You can't execute a prepared statement which has an open cursor "
                                               "associated with it. Reset the statement to re-execute it.",
                                               {})},
    {ErrStmtHasNoOpenCursor, mysql::Message("The statement (%d) has no open cursor.", {})},
    {ErrCommitNotAllowedInSfOrTrg,
     mysql::Message("Explicit or implicit commit is not allowed in stored function or trigger.", {})},
    {ErrNoDefaultForViewField,
     mysql::Message("Field of view '%-.192s.%-.192s' underlying table doesn't have a default value", {})},
    {ErrSpNoRecursion, mysql::Message("Recursive stored functions and triggers are not allowed.", {})},
    {ErrTooBigScale, mysql::Message("Too big scale %d specified for column '%-.192s'. Maximum is %d.", {})},
    {ErrTooBigPrecision, mysql::Message("Too big precision %d specified for column '%-.192s'. Maximum is %d.", {})},
    {ErrMBiggerThanD,
     mysql::Message("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column '%-.192s').", {})},
    {ErrWrongLockOfSystemTable,
     mysql::Message("You can't combine write-locking of system tables with other tables or lock types", {})},
    {ErrConnectToForeignDataSource, mysql::Message("Unable to connect to foreign data source: %.64s", {})},
    {ErrQueryOnForeignDataSource,
     mysql::Message("There was a problem processing the query on the foreign data source. Data source : %-.64s", {})},
    {ErrForeignDataSourceDoesntExist,
     mysql::Message("The foreign data source you are trying to reference does not exist. Data source :  %-.64s", {})},
    {ErrForeignDataStringInvalidCantCreate,
     mysql::Message(
         "Can't create federated table. The data source connection string '%-.64s' is not in the correct format", {})},
    {ErrForeignDataStringInvalid,
     mysql::Message("The data source connection string '%-.64s' is not in the correct format", {})},
    {ErrCantCreateFederatedTable, mysql::Message("Can't create federated table. Foreign data src :  %-.64s", {})},
    {ErrTrgInWrongSchema, mysql::Message("Trigger in wrong schema", {})},
    {ErrStackOverrunNeedMore, mysql::Message("Thread stack overrun:  %d bytes used of a %d byte stack, and %d bytes "
                                             "needed.  Use 'mysqld --threadStack=#' to specify a bigger stack.",
                                             {})},
    {ErrTooLongBody, mysql::Message("Routine body for '%-.100s' is too long", {})},
    {ErrWarnCantDropDefaultKeycache, mysql::Message("Cannot drop default keycache", {})},
    {ErrTooBigDisplaywidth, mysql::Message("Display width out of range for column '%-.192s' (max = %d)", {})},
    {ErrXaerDupid, mysql::Message("XAERDUPID: The XID already exists", {})},
    {ErrDatetimeFunctionOverflow, mysql::Message("Datetime function: %-.32s field overflow", {})},
    {ErrCantUpdateUsedTableInSfOrTrg,
     mysql::Message("Can't update table '%-.192s' in stored function/trigger because it is already used by statement "
                    "which invoked this stored function/trigger.",
                    {})},
    {ErrViewPreventUpdate,
     mysql::Message("The definition of table '%-.192s' prevents operation %.192s on table '%-.192s'.", {})},
    {ErrPsNoRecursion,
     mysql::Message("The prepared statement contains a stored routine call that refers to that same statement. It's "
                    "not allowed to execute a prepared statement in such a recursive manner",
                    {})},
    {ErrSpCantSetAutocommit, mysql::Message("Not allowed to set autocommit from a stored function or trigger", {})},
    {ErrMalformedDefiner, mysql::Message("Definer is not fully qualified", {})},
    {ErrViewFrmNoUser, mysql::Message("View '%-.192s'.'%-.192s' has no definer information (old table format). Current "
                                      "user is used as definer. Please recreate the view!",
                                      {})},
    {ErrViewOtherUser,
     mysql::Message("You need the SUPER privilege for creation view with '%-.192s'@'%-.255s' definer", {})},
    {ErrNoSuchUser, mysql::Message("The user specified as a definer ('%-.64s'@'%-.255s') does not exist", {})},
    {ErrForbidSchemaChange, mysql::Message("Changing schema from '%-.192s' to '%-.192s' is not allowed.", {})},
    {ErrRowIsReferenced2,
     mysql::Message("Cannot delete or update a parent row: a foreign key constraint fails (%.192s)", {})},
    {ErrNoReferencedRow2,
     mysql::Message("Cannot add or update a child row: a foreign key constraint fails (%.192s)", {})},
    {ErrSpBadVarShadow, mysql::Message("Variable '%-.64s' must be quoted with `...`, or renamed", {})},
    {ErrTrgNoDefiner,
     mysql::Message(
         "No definer attribute for trigger '%-.192s'.'%-.192s'. The trigger will be activated under the authorization "
         "of the invoker, which may have insufficient privileges. Please recreate the trigger.",
         {})},
    {ErrOldFileFormat, mysql::Message("'%-.192s' has an old format, you should re-create the '%s' object(s)", {})},
    {ErrSpRecursionLimit,
     mysql::Message("Recursive limit %d (as set by the maxSpRecursionDepth variable) was exceeded for routine %.192s",
                    {})},
    {ErrSpProcTableCorrupt, mysql::Message("Failed to load routine %-.192s. The table mysql.proc is missing, corrupt, "
                                           "or contains bad data (internal code %d)",
                                           {})},
    {ErrSpWrongName, mysql::Message("Incorrect routine name '%-.192s'", {})},
    {ErrTableNeedsUpgrade, mysql::Message("Table upgrade required. Please do \"REPAIR TABLE `%-.32s`\"", {})},
    {ErrSpNoAggregate, mysql::Message("AGGREGATE is not supported for stored functions", {})},
    {ErrMaxPreparedStmtCountReached,
     mysql::Message("Can't create more than maxPreparedStmtCount statements (current value: %d)", {})},
    {ErrViewRecursive, mysql::Message("`%-.192s`.`%-.192s` contains view recursion", {})},
    {ErrNonGroupingFieldUsed, mysql::Message("Non-grouping field '%-.192s' is used in %-.64s clause", {})},
    {ErrTableCantHandleSpkeys, mysql::Message("The used table type doesn't support SPATIAL indexes", {})},
    {ErrNoTriggersOnSystemSchema, mysql::Message("Triggers can not be created on system tables", {})},
    {ErrRemovedSpaces, mysql::Message("Leading spaces are removed from name '%s'", {})},
    {ErrAutoincReadFailed, mysql::Message("Failed to read auto-increment value from storage engine", {})},
    {ErrUsername, mysql::Message("user name", {})},
    {ErrHostname, mysql::Message("host name", {})},
    {ErrWrongStringLength, mysql::Message("String '%-.70s' is too long for %s (should be no longer than %d)", {})},
    {ErrNonInsertableTable, mysql::Message("The target table %-.100s of the %s is not insertable-into", {})},
    {ErrAdminWrongMrgTable,
     mysql::Message("Table '%-.64s' is differently defined or of non-MyISAM type or doesn't exist", {})},
    {ErrTooHighLevelOfNestingForSelect, mysql::Message("Too high level of nesting for select", {})},
    {ErrNameBecomesEmpty, mysql::Message("Name '%-.64s' has become ''", {})},
    {ErrAmbiguousFieldTerm, mysql::Message("First character of the FIELDS TERMINATED string is ambiguous; please use "
                                           "non-optional and non-empty FIELDS ENCLOSED BY",
                                           {})},
    {ErrForeignServerExists, mysql::Message("The foreign server, %s, you are trying to create already exists.", {})},
    {ErrForeignServerDoesntExist,
     mysql::Message("The foreign server name you are trying to reference does not exist. Data source :  %-.64s", {})},
    {ErrIllegalHaCreateOption,
     mysql::Message("Table storage engine '%-.64s' does not support the create option '%.64s'", {})},
    {ErrPartitionRequiresValues,
     mysql::Message("Syntax : %-.64s PARTITIONING requires definition of VALUES %-.64s for each partition", {})},
    {ErrPartitionWrongValues,
     mysql::Message("Only %-.64s PARTITIONING can use VALUES %-.64s in partition definition", {1})},
    {ErrPartitionMaxvalue, mysql::Message("MAXVALUE can only be used in last partition definition", {})},
    {ErrPartitionSubpartition, mysql::Message("Subpartitions can only be hash partitions and by key", {})},
    {ErrPartitionSubpartMix, mysql::Message("Must define subpartitions on all partitions if on one partition", {})},
    {ErrPartitionWrongNoPart, mysql::Message("Wrong number of partitions defined, mismatch with previous setting", {})},
    {ErrPartitionWrongNoSubpart,
     mysql::Message("Wrong number of subpartitions defined, mismatch with previous setting", {})},
    {ErrWrongExprInPartitionFunc,
     mysql::Message("Constant, random or timezone-dependent expressions in (sub)partitioning function are not allowed",
                    {})},
    {ErrNoConstExprInRangeOrList, mysql::Message("Expression in RANGE/LIST VALUES must be constant", {})},
    {ErrFieldNotFoundPart, mysql::Message("Field in list of fields for partition function not found in table", {})},
    {ErrListOfFieldsOnlyInHash, mysql::Message("List of fields is only allowed in KEY partitions", {})},
    {ErrInconsistentPartitionInfo,
     mysql::Message("The partition info in the frm file is not consistent with what can be written into the frm file",
                    {})},
    {ErrPartitionFuncNotAllowed, mysql::Message("The %-.192s function returns the wrong type", {})},
    {ErrPartitionsMustBeDefined, mysql::Message("For %-.64s partitions each partition must be defined", {})},
    {ErrRangeNotIncreasing,
     mysql::Message("VALUES LESS THAN value must be strictly increasing for each partition", {})},
    {ErrInconsistentTypeOfFunctions, mysql::Message("VALUES value must be of same type as partition function", {})},
    {ErrMultipleDefConstInListPart, mysql::Message("Multiple definition of same constant in list partitioning", {})},
    {ErrPartitionEntry, mysql::Message("Partitioning can not be used stand-alone in query", {})},
    {ErrMixHandler,
     mysql::Message("The mix of handlers in the partitions is not allowed in this version of MySQL", {})},
    {ErrPartitionNotDefined, mysql::Message("For the partitioned engine it is necessary to define all %-.64s", {})},
    {ErrTooManyPartitions, mysql::Message("Too many partitions (including subpartitions) were defined", {})},
    {ErrSubpartition,
     mysql::Message("It is only possible to mix RANGE/LIST partitioning with HASH/KEY partitioning for subpartitioning",
                    {})},
    {ErrCantCreateHandlerFile, mysql::Message("Failed to create specific handler file", {})},
    {ErrBlobFieldInPartFunc, mysql::Message("A BLOB field is not allowed in partition function", {})},
    {ErrUniqueKeyNeedAllFieldsInPf,
     mysql::Message("A %-.192s must include all columns in the table's partitioning function", {})},
    {ErrNoParts, mysql::Message("Number of %-.64s = 0 is not an allowed value", {0})},
    {ErrPartitionMgmtOnNonpartitioned,
     mysql::Message("Partition management on a not partitioned table is not possible", {})},
    {ErrForeignKeyOnPartitioned,
     mysql::Message("Foreign key clause is not yet supported in conjunction with partitioning", {})},
    {ErrDropPartitionNonExistent, mysql::Message("Error in list of partitions to %-.64s", {})},
    {ErrDropLastPartition, mysql::Message("Cannot remove all partitions, use DROP TABLE instead", {})},
    {ErrCoalesceOnlyOnHashPartition, mysql::Message("COALESCE PARTITION can only be used on HASH/KEY partitions", {})},
    {ErrReorgHashOnlyOnSameNo,
     mysql::Message("REORGANIZE PARTITION can only be used to reorganize partitions not to change their numbers", {})},
    {ErrReorgNoParam,
     mysql::Message(
         "REORGANIZE PARTITION without parameters can only be used on auto-partitioned tables using HASH PARTITIONs",
         {})},
    {ErrOnlyOnRangeListPartition, mysql::Message("%-.64s PARTITION can only be used on RANGE/LIST partitions", {})},
    {ErrAddPartitionSubpart, mysql::Message("Trying to Add partition(s) with wrong number of subpartitions", {})},
    {ErrAddPartitionNoNewPartition, mysql::Message("At least one partition must be added", {})},
    {ErrCoalescePartitionNoPartition, mysql::Message("At least one partition must be coalesced", {})},
    {ErrReorgPartitionNotExist, mysql::Message("More partitions to reorganize than there are partitions", {})},
    {ErrSameNamePartition, mysql::Message("Duplicate partition name %-.192s", {})},
    {ErrNoBinlog, mysql::Message("It is not allowed to shut off binlog on this command", {})},
    {ErrConsecutiveReorgPartitions,
     mysql::Message("When reorganizing a set of partitions they must be in consecutive order", {})},
    {ErrReorgOutsideRange, mysql::Message("Reorganize of range partitions cannot change total ranges except for last "
                                          "partition where it can extend the range",
                                          {})},
    {ErrPartitionFunctionFailure,
     mysql::Message("Partition function not supported in this version for this handler", {})},
    {ErrPartState, mysql::Message("Partition state cannot be defined from CREATE/ALTER TABLE", {})},
    {ErrLimitedPartRange, mysql::Message("The %-.64s handler only supports 32 bit integers in VALUES", {})},
    {ErrPluginIsNotLoaded, mysql::Message("Plugin '%-.192s' is not loaded", {})},
    {ErrWrongValue, mysql::Message("Incorrect %-.32s value: '%-.128s'", {1})},
    {ErrNoPartitionForGivenValue, mysql::Message("Table has no partition for value %-.64s", {0})},
    {ErrFilegroupOptionOnlyOnce, mysql::Message("It is not allowed to specify %s more than once", {})},
    {ErrCreateFilegroupFailed, mysql::Message("Failed to create %s", {})},
    {ErrDropFilegroupFailed, mysql::Message("Failed to drop %s", {})},
    {ErrTablespaceAutoExtend, mysql::Message("The handler doesn't support autoextend of tablespaces", {})},
    {ErrWrongSizeNumber,
     mysql::Message("A size parameter was incorrectly specified, either number or on the form 10M", {})},
    {ErrSizeOverflow,
     mysql::Message("The size number was correct but we don't allow the digit part to be more than 2 billion", {})},
    {ErrAlterFilegroupFailed, mysql::Message("Failed to alter: %s", {})},
    {ErrBinlogRowLoggingFailed, mysql::Message("Writing one row to the row-based binary log failed", {})},
    {ErrEventAlreadyExists, mysql::Message("Event '%-.192s' already exists", {})},
    {ErrEventStoreFailed, mysql::Message("Failed to store event %s. Error code %d from storage engine.", {})},
    {ErrEventDoesNotExist, mysql::Message("Unknown event '%-.192s'", {})},
    {ErrEventCantAlter, mysql::Message("Failed to alter event '%-.192s'", {})},
    {ErrEventDropFailed, mysql::Message("Failed to drop %s", {})},
    {ErrEventIntervalNotPositiveOrTooBig, mysql::Message("INTERVAL is either not positive or too big", {})},
    {ErrEventEndsBeforeStarts, mysql::Message("ENDS is either invalid or before STARTS", {})},
    {ErrEventExecTimeInThePast, mysql::Message("Event execution time is in the past. Event has been disabled", {})},
    {ErrEventOpenTableFailed, mysql::Message("Failed to open mysql.event", {})},
    {ErrEventNeitherMExprNorMAt, mysql::Message("No datetime expression provided", {})},
    {ErrObsoleteColCountDoesntMatchCorrupted,
     mysql::Message("Column count of mysql.%s is wrong. Expected %d, found %d. The table is probably corrupted", {})},
    {ErrObsoleteCannotLoadFromTable, mysql::Message("Cannot load from mysql.%s. The table is probably corrupted", {})},
    {ErrEventCannotDelete, mysql::Message("Failed to delete the event from mysql.event", {})},
    {ErrEventCompile, mysql::Message("Error during compilation of event's body", {})},
    {ErrEventSameName, mysql::Message("Same old and new event name", {})},
    {ErrEventDataTooLong, mysql::Message("Data for column '%s' too long", {})},
    {ErrDropIndexFk, mysql::Message("Cannot drop index '%-.192s': needed in a foreign key constraint", {})},
    {ErrWarnDeprecatedSyntaxWithVer,
     mysql::Message("The syntax '%s' is deprecated and will be removed in MySQL %s. Please use %s instead", {})},
    {ErrCantWriteLockLogTable, mysql::Message("You can't write-lock a log table. Only read access is possible", {})},
    {ErrCantLockLogTable, mysql::Message("You can't use locks with log tables.", {})},
    {ErrForeignDuplicateKeyOldUnused, mysql::Message("Upholding foreign key constraints for table '%.192s', entry "
                                                     "'%-.192s', key %d would lead to a duplicate entry",
                                                     {})},
    {ErrColCountDoesntMatchPleaseUpdate,
     mysql::Message("Column count of mysql.%s is wrong. Expected %d, found %d. Created with MySQL %d, now running %d. "
                    "Please use mysqlUpgrade to fix this error.",
                    {})},
    {ErrTempTablePreventsSwitchOutOfRbr,
     mysql::Message("Cannot switch out of the row-based binary log format when the session has open temporary tables",
                    {})},
    {ErrStoredFunctionPreventsSwitchBinlogFormat,
     mysql::Message("Cannot change the binary logging format inside a stored function or trigger", {})},
    {ErrNdbCantSwitchBinlogFormat,
     mysql::Message("The NDB cluster engine does not support changing the binlog format on the fly yet", {})},
    {ErrPartitionNoTemporary, mysql::Message("Cannot create temporary table with partitions", {})},
    {ErrPartitionConstDomain, mysql::Message("Partition constant is out of partition function domain", {})},
    {ErrPartitionFunctionIsNotAllowed, mysql::Message("This partition function is not allowed", {})},
    {ErrDdlLog, mysql::Message("Error in DDL log", {})},
    {ErrNullInValuesLessThan, mysql::Message("Not allowed to use NULL value in VALUES LESS THAN", {})},
    {ErrWrongPartitionName, mysql::Message("Incorrect partition name", {})},
    {ErrCantChangeTxCharacteristics,
     mysql::Message("Transaction characteristics can't be changed while a transaction is in progress", {})},
    {ErrDupEntryAutoincrementCase,
     mysql::Message(
         "ALTER TABLE causes autoIncrement resequencing, resulting in duplicate entry '%-.192s' for key '%-.192s'",
         {})},
    {ErrEventModifyQueue, mysql::Message("Internal scheduler error %d", {})},
    {ErrEventSetVar, mysql::Message("Error during starting/stopping of the scheduler. Error code %d", {})},
    {ErrPartitionMerge, mysql::Message("Engine cannot be used in partitioned tables", {})},
    {ErrCantActivateLog, mysql::Message("Cannot activate '%-.64s' log", {})},
    {ErrRbrNotAvailable, mysql::Message("The server was not built with row-based replication", {})},
    {ErrBase64Decode, mysql::Message("Decoding of base64 string failed", {})},
    {ErrEventRecursionForbidden,
     mysql::Message("Recursion of EVENT DDL statements is forbidden when body is present", {})},
    {ErrEventsDB,
     mysql::Message("Cannot proceed because system tables used by Event Scheduler were found damaged at server start",
                    {})},
    {ErrOnlyIntegersAllowed, mysql::Message("Only integers allowed as number here", {})},
    {ErrUnsuportedLogEngine, mysql::Message("This storage engine cannot be used for log tables\"", {})},
    {ErrBadLogStatement, mysql::Message("You cannot '%s' a log table if logging is enabled", {})},
    {ErrCantRenameLogTable,
     mysql::Message("Cannot rename '%s'. When logging enabled, rename to/from log table must rename two tables: the "
                    "log table to an archive table and another table back to '%s'",
                    {})},
    {ErrWrongParamcountToNativeFct,
     mysql::Message("Incorrect parameter count in the call to native function '%-.192s'", {})},
    {ErrWrongParametersToNativeFct,
     mysql::Message("Incorrect parameters in the call to native function '%-.192s'", {})},
    {ErrWrongParametersToStoredFct,
     mysql::Message("Incorrect parameters in the call to stored function '%-.192s'", {})},
    {ErrNativeFctNameCollision, mysql::Message("This function '%-.192s' has the same name as a native function", {})},
    {ErrDupEntryWithKeyName, mysql::Message("Duplicate entry '%-.64s' for key '%-.192s'", {})},
    {ErrBinlogPurgeEmFile, mysql::Message("Too many files opened, please execute the command again", {})},
    {ErrEventCannotCreateInThePast, mysql::Message("Event execution time is in the past and ON COMPLETION NOT PRESERVE "
                                                   "is set. The event was dropped immediately after creation.",
                                                   {})},
    {ErrEventCannotAlterInThePast, mysql::Message("Event execution time is in the past and ON COMPLETION NOT PRESERVE "
                                                  "is set. The event was not changed. Specify a time in the future.",
                                                  {})},
    {ErrNoPartitionForGivenValueSilent, mysql::Message("Table has no partition for some existing values", {})},
    {ErrBinlogUnsafeStatement,
     mysql::Message(
         "Unsafe statement written to the binary log using statement format since BINLOGFORMAT = STATEMENT. %s", {})},
    {ErrBinlogLoggingImpossible, mysql::Message("Binary logging not possible. Message: %s", {})},
    {ErrViewNoCreationCtx, mysql::Message("View `%-.64s`.`%-.64s` has no creation context", {})},
    {ErrViewInvalidCreationCtx, mysql::Message("Creation context of view `%-.64s`.`%-.64s' is invalid", {})},
    {ErrSrInvalidCreationCtx, mysql::Message("Creation context of stored routine `%-.64s`.`%-.64s` is invalid", {})},
    {ErrTrgCorruptedFile, mysql::Message("Corrupted TRG file for table `%-.64s`.`%-.64s`", {})},
    {ErrTrgNoCreationCtx, mysql::Message("Triggers for table `%-.64s`.`%-.64s` have no creation context", {})},
    {ErrTrgInvalidCreationCtx, mysql::Message("Trigger creation context of table `%-.64s`.`%-.64s` is invalid", {})},
    {ErrEventInvalidCreationCtx, mysql::Message("Creation context of event `%-.64s`.`%-.64s` is invalid", {})},
    {ErrTrgCantOpenTable, mysql::Message("Cannot open table for trigger `%-.64s`.`%-.64s`", {})},
    {ErrCantCreateSroutine, mysql::Message("Cannot create stored routine `%-.64s`. Check warnings", {})},
    {ErrNoFormatDescriptionEventBeforeBinlogStatement,
     mysql::Message("The BINLOG statement of type `%s` was not preceded by a format description BINLOG statement.",
                    {})},
    {ErrLoadDataInvalidColumn, mysql::Message("Invalid column reference (%-.64s) in LOAD DATA", {})},
    {ErrLogPurgeNoFile, mysql::Message("Being purged log %s was not found", {})},
    {ErrXaRbtimeout, mysql::Message("XARBTIMEOUT: Transaction branch was rolled back: took too long", {})},
    {ErrXaRbdeadlock, mysql::Message("XARBDEADLOCK: Transaction branch was rolled back: deadlock was detected", {})},
    {ErrNeedReprepare, mysql::Message("Prepared statement needs to be re-prepared", {})},
    {ErrDelayedNotSupported, mysql::Message("DELAYED option not supported for table '%-.192s'", {})},
    {WarnOptionIgnored, mysql::Message("<%-.64s> option ignored", {})},
    {WarnPluginDeleteBuiltin, mysql::Message("Built-in plugins cannot be deleted", {})},
    {WarnPluginBusy, mysql::Message("Plugin is busy and will be uninstalled on shutdown", {})},
    {ErrVariableIsReadonly, mysql::Message("%s variable '%s' is read-only. Use SET %s to assign the value", {})},
    {ErrWarnEngineTransactionRollback, mysql::Message("Storage engine %s does not support rollback for this statement. "
                                                      "Transaction rolled back and must be restarted",
                                                      {})},
    {ErrNdbReplicationSchema, mysql::Message("Bad schema for mysql.ndbReplication table. Message: %-.64s", {})},
    {ErrConflictFnParse, mysql::Message("Error in parsing conflict function. Message: %-.64s", {})},
    {ErrExceptionsWrite, mysql::Message("Write to exceptions table failed. Message: %-.128s\"", {})},
    {ErrTooLongTableComment, mysql::Message("Comment for table '%-.64s' is too long (max = %d)", {})},
    {ErrTooLongFieldComment, mysql::Message("Comment for field '%-.64s' is too long (max = %d)", {})},
    {ErrFuncInexistentNameCollision,
     mysql::Message(
         "FUNCTION %s does not exist. Check the 'Function Name Parsing and Resolution' section in the Reference Manual",
         {})},
    {ErrDatabaseName, mysql::Message("Database", {})},
    {ErrTableName, mysql::Message("Table", {})},
    {ErrPartitionName, mysql::Message("Partition", {})},
    {ErrSubpartitionName, mysql::Message("Subpartition", {})},
    {ErrTemporaryName, mysql::Message("Temporary", {})},
    {ErrRenamedName, mysql::Message("Renamed", {})},
    {ErrTooManyConcurrentTrxs, mysql::Message("Too many active concurrent transactions", {})},
    {WarnNonASCIISeparatorNotImplemented, mysql::Message("Non-ASCII separator arguments are not fully supported", {})},
    {ErrDebugSyncTimeout, mysql::Message("debug sync point wait timed out", {})},
    {ErrDebugSyncHitLimit, mysql::Message("debug sync point hit limit reached", {})},
    {ErrDupSignalSet, mysql::Message("Duplicate condition information item '%s'", {})},
    {ErrSignalWarn, mysql::Message("Unhandled user-defined warning condition", {})},
    {ErrSignalNotFound, mysql::Message("Unhandled user-defined not found condition", {})},
    {ErrSignalException, mysql::Message("Unhandled user-defined exception condition", {})},
    {ErrResignalWithoutActiveHandler, mysql::Message("RESIGNAL when handler not active", {})},
    {ErrSignalBadConditionType, mysql::Message("SIGNAL/RESIGNAL can only use a CONDITION defined with SQLSTATE", {})},
    {WarnCondItemTruncated, mysql::Message("Data truncated for condition item '%s'", {})},
    {ErrCondItemTooLong, mysql::Message("Data too long for condition item '%s'", {})},
    {ErrUnknownLocale, mysql::Message("Unknown locale: '%-.64s'", {})},
    {ErrQueryCacheDisabled,
     mysql::Message("Query cache is disabled; restart the server with queryCacheType=1 to enable it", {})},
    {ErrSameNamePartitionField, mysql::Message("Duplicate partition field name '%-.192s'", {})},
    {ErrPartitionColumnList, mysql::Message("Inconsistency in usage of column lists for partitioning", {})},
    {ErrWrongTypeColumnValue, mysql::Message("Partition column values of incorrect type", {})},
    {ErrTooManyPartitionFuncFields, mysql::Message("Too many fields in '%-.192s'", {})},
    {ErrMaxvalueInValuesIn, mysql::Message("Cannot use MAXVALUE as value in VALUES IN", {})},
    {ErrTooManyValues, mysql::Message("Cannot have more than one value for this type of %-.64s partitioning", {})},
    {ErrRowSinglePartitionField,
     mysql::Message("Row expressions in VALUES IN only allowed for multi-field column partitioning", {})},
    {ErrFieldTypeNotAllowedAsPartitionField,
     mysql::Message("Field '%-.192s' is of a not allowed type for this type of partitioning", {})},
    {ErrPartitionFieldsTooLong, mysql::Message("The total length of the partitioning fields is too large", {})},
    {ErrBinlogRowEngineAndStmtEngine,
     mysql::Message("Cannot execute statement: impossible to write to binary log since both row-incapable engines and "
                    "statement-incapable engines are involved.",
                    {})},
    {ErrBinlogRowModeAndStmtEngine,
     mysql::Message("Cannot execute statement: impossible to write to binary log since BINLOGFORMAT = ROW and at least "
                    "one table uses a storage engine limited to statement-based logging.",
                    {})},
    {ErrBinlogUnsafeAndStmtEngine,
     mysql::Message("Cannot execute statement: impossible to write to binary log since statement is unsafe, storage "
                    "engine is limited to statement-based logging, and BINLOGFORMAT = MIXED. %s",
                    {})},
    {ErrBinlogRowInjectionAndStmtEngine,
     mysql::Message("Cannot execute statement: impossible to write to binary log since statement is in row format and "
                    "at least one table uses a storage engine limited to statement-based logging.",
                    {})},
    {ErrBinlogStmtModeAndRowEngine,
     mysql::Message("Cannot execute statement: impossible to write to binary log since BINLOGFORMAT = STATEMENT and at "
                    "least one table uses a storage engine limited to row-based logging.%s",
                    {})},
    {ErrBinlogRowInjectionAndStmtMode, mysql::Message("Cannot execute statement: impossible to write to binary log "
                                                      "since statement is in row format and BINLOGFORMAT = STATEMENT.",
                                                      {})},
    {ErrBinlogMultipleEnginesAndSelfLoggingEngine,
     mysql::Message("Cannot execute statement: impossible to write to binary log since more than one engine is "
                    "involved and at least one engine is self-logging.",
                    {})},
    {ErrBinlogUnsafeLimit, mysql::Message("The statement is unsafe because it uses a LIMIT clause. This is unsafe "
                                          "because the set of rows included cannot be predicted.",
                                          {})},
    {ErrBinlogUnsafeInsertDelayed,
     mysql::Message("The statement is unsafe because it uses INSERT DELAYED. This is unsafe because the times when "
                    "rows are inserted cannot be predicted.",
                    {})},
    {ErrBinlogUnsafeAutoincColumns,
     mysql::Message("Statement is unsafe because it invokes a trigger or a stored function that inserts into an "
                    "AUTOINCREMENT column. Inserted values cannot be logged correctly.",
                    {})},
    {ErrBinlogUnsafeNontransAfterTrans,
     mysql::Message("Statement is unsafe because it accesses a non-transactional table after accessing a transactional "
                    "table within the same transaction.",
                    {})},
    {ErrMessageAndStatement, mysql::Message("%s Statement: %s", {})},
    {ErrInsideTransactionPreventsSwitchBinlogFormat,
     mysql::Message("Cannot modify @@session.binlogFormat inside a transaction", {})},
    {ErrPathLength, mysql::Message("The path specified for %.64s is too long.", {})},
    {ErrWarnDeprecatedSyntaxNoReplacement,
     mysql::Message("'%s' is deprecated and will be removed in a future release.", {})},
    {ErrWrongNativeTableStructure, mysql::Message("Native table '%-.64s'.'%-.64s' has the wrong structure", {})},
    {ErrWrongPerfSchemaUsage, mysql::Message("Invalid performanceSchema usage.", {})},
    {ErrWarnISSkippedTable,
     mysql::Message("Table '%s'.'%s' was skipped since its definition is being modified by concurrent DDL statement",
                    {})},
    {ErrInsideTransactionPreventsSwitchBinlogDirect,
     mysql::Message("Cannot modify @@session.binlogDirectNonTransactionalUpdates inside a transaction", {})},
    {ErrStoredFunctionPreventsSwitchBinlogDirect,
     mysql::Message("Cannot change the binlog direct flag inside a stored function or trigger", {})},
    {ErrSpatialMustHaveGeomCol, mysql::Message("A SPATIAL index may only contain a geometrical type column", {})},
    {ErrTooLongIndexComment, mysql::Message("Comment for index '%-.64s' is too long (max = %d)", {})},
    {ErrLockAborted, mysql::Message("Wait on a lock was aborted due to a pending exclusive lock", {})},
    {ErrDataOutOfRange, mysql::Message("%s value is out of range in '%s'", {1})},
    {ErrWrongSpvarTypeInLimit, mysql::Message("A variable of a non-integer based type in LIMIT clause", {})},
    {ErrBinlogUnsafeMultipleEnginesAndSelfLoggingEngine,
     mysql::Message("Mixing self-logging and non-self-logging engines in a statement is unsafe.", {})},
    {ErrBinlogUnsafeMixedStatement, mysql::Message("Statement accesses nontransactional table as well as transactional "
                                                   "or temporary table, and writes to any of them.",
                                                   {})},
    {ErrInsideTransactionPreventsSwitchSQLLogBin,
     mysql::Message("Cannot modify @@session.sqlLogBin inside a transaction", {})},
    {ErrStoredFunctionPreventsSwitchSQLLogBin,
     mysql::Message("Cannot change the sqlLogBin inside a stored function or trigger", {})},
    {ErrFailedReadFromParFile, mysql::Message("Failed to read from the .par file", {})},
    {ErrValuesIsNotIntType, mysql::Message("VALUES value for partition '%-.64s' must have type INT", {})},
    {ErrAccessDeniedNoPassword, mysql::Message("Access denied for user '%-.48s'@'%-.255s'", {})},
    {ErrSetPasswordAuthPlugin,
     mysql::Message("SET PASSWORD has no significance for users authenticating via plugins", {})},
    {ErrGrantPluginUserExists,
     mysql::Message("GRANT with IDENTIFIED WITH is illegal because the user %-.*s already exists", {})},
    {ErrTruncateIllegalFk,
     mysql::Message("Cannot truncate a table referenced in a foreign key constraint (%.192s)", {})},
    {ErrPluginIsPermanent, mysql::Message("Plugin '%s' is forcePlusPermanent and can not be unloaded", {})},
    {ErrStmtCacheFull, mysql::Message("Multi-row statements required more than 'maxBinlogStmtCacheSize' bytes of "
                                      "storage; increase this mysqld variable and try again",
                                      {})},
    {ErrMultiUpdateKeyConflict,
     mysql::Message(
         "Primary key/partition key update is not allowed since the table is updated both as '%-.192s' and '%-.192s'.",
         {})},
    {ErrTableNeedsRebuild,
     mysql::Message("Table rebuild required. Please do \"ALTER TABLE `%-.32s` FORCE\" or dump/reload to fix it!", {})},
    {WarnOptionBelowLimit, mysql::Message("The value of '%s' should be no less than the value of '%s'", {})},
    {ErrIndexColumnTooLong, mysql::Message("Index column size too large. The maximum column size is %d bytes.", {})},
    {ErrErrorInTriggerBody, mysql::Message("Trigger '%-.64s' has an error in its body: '%-.256s'", {})},
    {ErrErrorInUnknownTriggerBody, mysql::Message("Unknown trigger has an error in its body: '%-.256s'", {})},
    {ErrIndexCorrupt, mysql::Message("Index %s is corrupted", {})},
    {ErrUndoRecordTooBig, mysql::Message("Undo log record is too big.", {})},
    {ErrPluginNoUninstall,
     mysql::Message(
         "Plugin '%s' is marked as not dynamically uninstallable. You have to stop the server to uninstall it.", {})},
    {ErrPluginNoInstall,
     mysql::Message("Plugin '%s' is marked as not dynamically installable. You have to stop the server to install it.",
                    {})},
    {ErrBinlogUnsafeInsertTwoKeys,
     mysql::Message("INSERT... ON DUPLICATE KEY UPDATE  on a table with more than one UNIQUE KEY is unsafe", {})},
    {ErrTableInFkCheck, mysql::Message("Table is being used in foreign key check.", {})},
    {ErrUnsupportedEngine, mysql::Message("Storage engine '%s' does not support system tables. [%s.%s]", {})},
    {ErrBinlogUnsafeAutoincNotFirst,
     mysql::Message(
         "INSERT into autoincrement field which is not the first part in the composed primary key is unsafe.", {})},
    {ErrCannotLoadFromTableV2, mysql::Message("Cannot load from %s.%s. The table is probably corrupted", {})},
    {ErrOnlyFdAndRbrEventsAllowedInBinlogStatement,
     mysql::Message(
         "Only FormatDescriptionLogEvent and row events are allowed in BINLOG statements (but %s was provided)", {})},
    {ErrPartitionExchangeDifferentOption,
     mysql::Message("Non matching attribute '%-.64s' between partition and table", {})},
    {ErrPartitionExchangePartTable, mysql::Message("Table to exchange with partition is partitioned: '%-.64s'", {})},
    {ErrPartitionExchangeTempTable, mysql::Message("Table to exchange with partition is temporary: '%-.64s'", {})},
    {ErrPartitionInsteadOfSubpartition,
     mysql::Message("Subpartitioned table, use subpartition instead of partition", {})},
    {ErrUnknownPartition, mysql::Message("Unknown partition '%-.64s' in table '%-.64s'", {})},
    {ErrTablesDifferentMetadata, mysql::Message("Tables have different definitions", {})},
    {ErrRowDoesNotMatchPartition, mysql::Message("Found a row that does not match the partition", {})},
    {ErrBinlogCacheSizeGreaterThanMax, mysql::Message("Option binlogCacheSize (%d) is greater than maxBinlogCacheSize "
                                                      "(%d); setting binlogCacheSize equal to maxBinlogCacheSize.",
                                                      {})},
    {ErrWarnIndexNotApplicable,
     mysql::Message("Cannot use %-.64s access on index '%-.64s' due to type or collation conversion on field '%-.64s'",
                    {})},
    {ErrPartitionExchangeForeignKey,
     mysql::Message("Table to exchange with partition has foreign key references: '%-.64s'", {})},
    {ErrNoSuchKeyValue, mysql::Message("Key value '%-.192s' was not found in table '%-.192s.%-.192s'", {})},
    {ErrRplInfoDataTooLong, mysql::Message("Data for column '%s' too long", {})},
    {ErrNetworkReadEventChecksumFailure,
     mysql::Message("Replication event checksum verification failed while reading from network.", {})},
    {ErrBinlogReadEventChecksumFailure,
     mysql::Message("Replication event checksum verification failed while reading from a log file.", {})},
    {ErrBinlogStmtCacheSizeGreaterThanMax,
     mysql::Message("Option binlogStmtCacheSize (%d) is greater than maxBinlogStmtCacheSize (%d); setting "
                    "binlogStmtCacheSize equal to maxBinlogStmtCacheSize.",
                    {})},
    {ErrCantUpdateTableInCreateTableSelect,
     mysql::Message("Can't update table '%-.192s' while '%-.192s' is being created.", {})},
    {ErrPartitionClauseOnNonpartitioned, mysql::Message("PARTITION () clause on non partitioned table", {})},
    {ErrRowDoesNotMatchGivenPartitionSet, mysql::Message("Found a row not matching the given partition set", {})},
    {ErrNoSuchPartitionunused, mysql::Message("partition '%-.64s' doesn't exist", {})},
    {ErrChangeRplInfoRepositoryFailure,
     mysql::Message("Failure while changing the type of replication repository: %s.", {})},
    {ErrWarningNotCompleteRollbackWithCreatedTempTable,
     mysql::Message("The creation of some temporary tables could not be rolled back.", {})},
    {ErrWarningNotCompleteRollbackWithDroppedTempTable,
     mysql::Message("Some temporary tables were dropped, but these operations could not be rolled back.", {})},
    {ErrMtsUpdatedDBsGreaterMax, mysql::Message("The number of modified databases exceeds the maximum %d; the database "
                                                "names will not be included in the replication event metadata.",
                                                {})},
    {ErrMtsCantParallel,
     mysql::Message("Cannot execute the current event group in the parallel mode. Encountered event %s, relay-log name "
                    "%s, position %s which prevents execution of this event group in parallel mode. Reason: %s.",
                    {})},
    {ErrMtsInconsistentData, mysql::Message("%s", {})},
    {ErrFulltextNotSupportedWithPartitioning,
     mysql::Message("FULLTEXT index is not supported for partitioned tables.", {})},
    {ErrDaInvalidConditionNumber, mysql::Message("Invalid condition number", {})},
    {ErrInsecurePlainText,
     mysql::Message("Sending passwords in plain text without SSL/TLS is extremely insecure.", {})},
    {ErrForeignDuplicateKeyWithChildInfo,
     mysql::Message("Foreign key constraint for table '%.192s', record '%-.192s' would lead to a duplicate entry in "
                    "table '%.192s', key '%.192s'",
                    {})},
    {ErrForeignDuplicateKeyWithoutChildInfo,
     mysql::Message(
         "Foreign key constraint for table '%.192s', record '%-.192s' would lead to a duplicate entry in a child table",
         {})},
    {ErrTableHasNoFt, mysql::Message("The table does not have FULLTEXT index to support this query", {})},
    {ErrVariableNotSettableInSfOrTrigger,
     mysql::Message("The system variable %.200s cannot be set in stored functions or triggers.", {})},
    {ErrVariableNotSettableInTransaction,
     mysql::Message("The system variable %.200s cannot be set when there is an ongoing transaction.", {})},
    {ErrGtidNextIsNotInGtidNextList,
     mysql::Message(
         "The system variable @@SESSION.GTIDNEXT has the value %.200s, which is not listed in @@SESSION.GTIDNEXTLIST.",
         {})},
    {ErrCantChangeGtidNextInTransactionWhenGtidNextListIsNull,
     mysql::Message("When @@SESSION.GTIDNEXTLIST == NULL, the system variable @@SESSION.GTIDNEXT cannot change inside "
                    "a transaction.",
                    {})},
    {ErrSetStatementCannotInvokeFunction,
     mysql::Message("The statement 'SET %.200s' cannot invoke a stored function.", {})},
    {ErrGtidNextCantBeAutomaticIfGtidNextListIsNonNull,
     mysql::Message(
         "The system variable @@SESSION.GTIDNEXT cannot be 'AUTOMATIC' when @@SESSION.GTIDNEXTLIST is non-NULL.", {})},
    {ErrSkippingLoggedTransaction,
     mysql::Message("Skipping transaction %.200s because it has already been executed and logged.", {})},
    {ErrMalformedGtidSetSpecification, mysql::Message("Malformed GTID set specification '%.200s'.", {})},
    {ErrMalformedGtidSetEncoding, mysql::Message("Malformed GTID set encoding.", {})},
    {ErrMalformedGtidSpecification, mysql::Message("Malformed GTID specification '%.200s'.", {})},
    {ErrGnoExhausted, mysql::Message("Impossible to generate Global Transaction Identifier: the integer component "
                                     "reached the maximal value. Restart the server with a new serverUuid.",
                                     {})},
    {ErrCantDoImplicitCommitInTrxWhenGtidNextIsSet,
     mysql::Message("Cannot execute statements with implicit commit inside a transaction when @@SESSION.GTIDNEXT != "
                    "AUTOMATIC or @@SESSION.GTIDNEXTLIST != NULL.",
                    {})},
    {ErrGtidMode2Or3RequiresEnforceGtidConsistencyOn,
     mysql::Message("@@GLOBAL.GTIDMODE = ON or UPGRADESTEP2 requires @@GLOBAL.ENFORCEGTIDCONSISTENCY = 1.", {})},
    {ErrCantSetGtidNextToGtidWhenGtidModeIsOff,
     mysql::Message("@@SESSION.GTIDNEXT cannot be set to UUID:NUMBER when @@GLOBAL.GTIDMODE = OFF.", {})},
    {ErrCantSetGtidNextToAnonymousWhenGtidModeIsOn,
     mysql::Message("@@SESSION.GTIDNEXT cannot be set to ANONYMOUS when @@GLOBAL.GTIDMODE = ON.", {})},
    {ErrCantSetGtidNextListToNonNullWhenGtidModeIsOff,
     mysql::Message("@@SESSION.GTIDNEXTLIST cannot be set to a non-NULL value when @@GLOBAL.GTIDMODE = OFF.", {})},
    {ErrFoundGtidEventWhenGtidModeIsOff,
     mysql::Message("Found a GtidLogEvent or PreviousGtidsLogEvent when @@GLOBAL.GTIDMODE = OFF.", {})},
    {ErrGtidUnsafeNonTransactionalTable,
     mysql::Message("When @@GLOBAL.ENFORCEGTIDCONSISTENCY = 1, updates to non-transactional tables can only be done in "
                    "either autocommitted statements or single-statement transactions, and never in the same statement "
                    "as updates to transactional tables.",
                    {})},
    {ErrGtidUnsafeCreateSelect,
     mysql::Message("CREATE TABLE ... SELECT is forbidden when @@GLOBAL.ENFORCEGTIDCONSISTENCY = 1.", {})},
    {ErrGtidUnsafeCreateDropTemporaryTableInTransaction,
     mysql::Message(
         "When @@GLOBAL.ENFORCEGTIDCONSISTENCY = 1, the statements CREATE TEMPORARY TABLE and DROP TEMPORARY TABLE can "
         "be executed in a non-transactional context only, and require that AUTOCOMMIT = 1.",
         {})},
    {ErrGtidModeCanOnlyChangeOneStepAtATime,
     mysql::Message("The value of @@GLOBAL.GTIDMODE can only change one step at a time: OFF <-> UPGRADESTEP1 <-> "
                    "UPGRADESTEP2 <-> ON. Also note that this value must be stepped up or down simultaneously on all "
                    "servers; see the Manual for instructions.",
                    {})},
    {ErrCantSetGtidNextWhenOwningGtid,
     mysql::Message("@@SESSION.GTIDNEXT cannot be changed by a client that owns a GTID. The client owns %s. Ownership "
                    "is released on COMMIT or ROLLBACK.",
                    {})},
    {ErrUnknownExplainFormat, mysql::Message("Unknown EXPLAIN format name: '%s'", {})},
    {ErrCantExecuteInReadOnlyTransaction, mysql::Message("Cannot execute statement in a READ ONLY transaction.", {})},
    {ErrTooLongTablePartitionComment,
     mysql::Message("Comment for table partition '%-.64s' is too long (max = %d)", {})},
    {ErrInnodbFtLimit, mysql::Message("InnoDB presently supports one FULLTEXT index creation at a time", {})},
    {ErrInnodbNoFtTempTable, mysql::Message("Cannot create FULLTEXT index on temporary InnoDB table", {})},
    {ErrInnodbFtWrongDocidColumn, mysql::Message("Column '%-.192s' is of wrong type for an InnoDB FULLTEXT index", {})},
    {ErrInnodbFtWrongDocidIndex, mysql::Message("Index '%-.192s' is of wrong type for an InnoDB FULLTEXT index", {})},
    {ErrInnodbOnlineLogTooBig,
     mysql::Message("Creating index '%-.192s' required more than 'innodbOnlineAlterLogMaxSize' bytes of modification "
                    "log. Please try again.",
                    {})},
    {ErrUnknownAlterAlgorithm, mysql::Message("Unknown ALGORITHM '%s'", {})},
    {ErrUnknownAlterLock, mysql::Message("Unknown LOCK type '%s'", {})},
    {ErrMtsResetWorkers,
     mysql::Message(
         "Cannot clean up worker info tables. Additional error messages can be found in the MySQL error log.", {})},
    {ErrColCountDoesntMatchCorruptedV2,
     mysql::Message("Column count of %s.%s is wrong. Expected %d, found %d. The table is probably corrupted", {})},
    {ErrDiscardFkChecksRunning,
     mysql::Message("There is a foreign key check running on table '%-.192s'. Cannot discard the table.", {})},
    {ErrTableSchemaMismatch, mysql::Message("Schema mismatch (%s)", {})},
    {ErrTableInSystemTablespace, mysql::Message("Table '%-.192s' in system tablespace", {})},
    {ErrIoRead, mysql::Message("IO Read : (%d, %s) %s", {})},
    {ErrIoWrite, mysql::Message("IO Write : (%d, %s) %s", {})},
    {ErrTablespaceMissing, mysql::Message("Tablespace is missing for table '%-.192s'", {})},
    {ErrTablespaceExists,
     mysql::Message("Tablespace for table '%-.192s' exists. Please DISCARD the tablespace before IMPORT.", {})},
    {ErrTablespaceDiscarded, mysql::Message("Tablespace has been discarded for table '%-.192s'", {})},
    {ErrInternal, mysql::Message("Internal : %s", {})},
    {ErrInnodbImport, mysql::Message("ALTER TABLE '%-.192s' IMPORT TABLESPACE failed with error %d : '%s'", {})},
    {ErrInnodbIndexCorrupt, mysql::Message("Index corrupt: %s", {})},
    {ErrInvalidYearColumnLength, mysql::Message("Supports only YEAR or YEAR(4) column", {})},
    {ErrNotValidPassword, mysql::Message("Your password does not satisfy the current policy requirements", {})},
    {ErrMustChangePassword, mysql::Message("You must SET PASSWORD before executing this statement", {})},
    {ErrFkNoIndexChild,
     mysql::Message(
         "Failed to add the foreign key constaint. Missing index for constraint '%s' in the foreign table '%s'", {})},
    {ErrFkNoIndexParent,
     mysql::Message(
         "Failed to add the foreign key constaint. Missing index for constraint '%s' in the referenced table '%s'",
         {})},
    {ErrFkFailAddSystem, mysql::Message("Failed to add the foreign key constraint '%s' to system tables", {})},
    {ErrFkCannotOpenParent, mysql::Message("Failed to open the referenced table '%s'", {})},
    {ErrFkIncorrectOption,
     mysql::Message(
         "Failed to add the foreign key constraint on table '%s'. Incorrect options in FOREIGN KEY constraint '%s'",
         {})},
    {ErrFkDupName, mysql::Message("Duplicate foreign key constraint name '%s'", {})},
    {ErrPasswordFormat, mysql::Message("The password hash doesn't have the expected format. Check if the correct "
                                       "password algorithm is being used with the PASSWORD() function.",
                                       {})},
    {ErrFkColumnCannotDrop,
     mysql::Message("Cannot drop column '%-.192s': needed in a foreign key constraint '%-.192s'", {})},
    {ErrFkColumnCannotDropChild,
     mysql::Message("Cannot drop column '%-.192s': needed in a foreign key constraint '%-.192s' of table '%-.192s'",
                    {})},
    {ErrFkColumnNotNull,
     mysql::Message("Column '%-.192s' cannot be NOT NULL: needed in a foreign key constraint '%-.192s' SET NULL", {})},
    {ErrDupIndex, mysql::Message("Duplicate index '%-.64s' defined on the table '%-.64s.%-.64s'. This is deprecated "
                                 "and will be disallowed in a future release.",
                                 {})},
    {ErrFkColumnCannotChange,
     mysql::Message("Cannot change column '%-.192s': used in a foreign key constraint '%-.192s'", {})},
    {ErrFkColumnCannotChangeChild,
     mysql::Message("Cannot change column '%-.192s': used in a foreign key constraint '%-.192s' of table '%-.192s'",
                    {})},
    {ErrFkCannotDeleteParent,
     mysql::Message(
         "Cannot delete rows from table which is parent in a foreign key constraint '%-.192s' of table '%-.192s'", {})},
    {ErrMalformedPacket, mysql::Message("Malformed communication packet.", {})},
    {ErrReadOnlyMode, mysql::Message("Running in read-only mode", {})},
    {ErrVariableNotSettableInSp, mysql::Message("The system variable %.200s cannot be set in stored procedures.", {})},
    {ErrCantSetGtidPurgedWhenGtidModeIsOff,
     mysql::Message("@@GLOBAL.GTIDPURGED can only be set when @@GLOBAL.GTIDMODE = ON.", {})},
    {ErrCantSetGtidPurgedWhenGtidExecutedIsNotEmpty,
     mysql::Message("@@GLOBAL.GTIDPURGED can only be set when @@GLOBAL.GTIDEXECUTED is empty.", {})},
    {ErrCantSetGtidPurgedWhenOwnedGtidsIsNotEmpty,
     mysql::Message(
         "@@GLOBAL.GTIDPURGED can only be set when there are no ongoing transactions (not even in other clients).",
         {})},
    {ErrGtidPurgedWasChanged, mysql::Message("@@GLOBAL.GTIDPURGED was changed from '%s' to '%s'.", {})},
    {ErrGtidExecutedWasChanged, mysql::Message("@@GLOBAL.GTIDEXECUTED was changed from '%s' to '%s'.", {})},
    {ErrBinlogStmtModeAndNoReplTables,
     mysql::Message("Cannot execute statement: impossible to write to binary log since BINLOGFORMAT = STATEMENT, and "
                    "both replicated and non replicated tables are written to.",
                    {})},
    {ErrAlterOperationNotSupported, mysql::Message("%s is not supported for this operation. Try %s.", {})},
    {ErrAlterOperationNotSupportedReason, mysql::Message("%s is not supported. Reason: %s. Try %s.", {})},
    {ErrAlterOperationNotSupportedReasonCopy, mysql::Message("COPY algorithm requires a lock", {})},
    {ErrAlterOperationNotSupportedReasonPartition,
     mysql::Message("Partition specific operations do not yet support LOCK/ALGORITHM", {})},
    {ErrAlterOperationNotSupportedReasonFkRename,
     mysql::Message("Columns participating in a foreign key are renamed", {})},
    {ErrAlterOperationNotSupportedReasonColumnType, mysql::Message("Cannot change column type INPLACE", {})},
    {ErrAlterOperationNotSupportedReasonFkCheck, mysql::Message("Adding foreign keys needs foreignKeyChecks=OFF", {})},
    {ErrAlterOperationNotSupportedReasonIgnore,
     mysql::Message("Creating unique indexes with IGNORE requires COPY algorithm to remove duplicate rows", {})},
    {ErrAlterOperationNotSupportedReasonNopk,
     mysql::Message("Dropping a primary key is not allowed without also adding a new primary key", {})},
    {ErrAlterOperationNotSupportedReasonAutoinc, mysql::Message("Adding an auto-increment column requires a lock", {})},
    {ErrAlterOperationNotSupportedReasonHiddenFts,
     mysql::Message("Cannot replace hidden FTSDOCID with a user-visible one", {})},
    {ErrAlterOperationNotSupportedReasonChangeFts, mysql::Message("Cannot drop or rename FTSDOCID", {})},
    {ErrAlterOperationNotSupportedReasonFts, mysql::Message("Fulltext index creation requires a lock", {})},
    {ErrDupUnknownInIndex, mysql::Message("Duplicate entry for key '%-.192s'", {})},
    {ErrIdentCausesTooLongPath,
     mysql::Message(
         "Long database name and identifier for object resulted in path length exceeding %d characters. Path: '%s'.",
         {})},
    {ErrAlterOperationNotSupportedReasonNotNull,
     mysql::Message("cannot silently convert NULL values, as required in this SQLMODE", {})},
    {ErrMustChangePasswordLogin,
     mysql::Message(
         "Your password has expired. To log in you must change it using a client that supports expired passwords.",
         {})},
    {ErrRowInWrongPartition, mysql::Message("Found a row in wrong partition %s", {0})},
    {ErrGeneratedColumnFunctionIsNotAllowed,
     mysql::Message("Expression of generated column '%s' contains a disallowed function.", {})},
    {ErrGeneratedColumnRowValueIsNotAllowed,
     mysql::Message("Expression of generated column '%s' cannot refer to a row value", {})},
    {ErrUnsupportedAlterInplaceOnVirtualColumn,
     mysql::Message("INPLACE ADD or DROP of virtual columns cannot be combined with other ALTER TABLE actions.", {})},
    {ErrWrongFKOptionForGeneratedColumn,
     mysql::Message("Cannot define foreign key with %s clause on a generated column.", {})},
    {ErrBadGeneratedColumn,
     mysql::Message("The value specified for generated column '%s' in table '%s' is not allowed.", {})},
    {ErrUnsupportedOnGeneratedColumn, mysql::Message("'%s' is not supported for generated columns.", {})},
    {ErrGeneratedColumnNonPrior,
     mysql::Message("Generated column can refer only to generated columns defined prior to it.", {})},
    {ErrDependentByGeneratedColumn, mysql::Message("Column '%s' has a generated column dependency.", {})},
    {ErrGeneratedColumnRefAutoInc, mysql::Message("Generated column '%s' cannot refer to auto-increment column.", {})},
    {ErrWarnConflictingHint, mysql::Message("Hint %s is ignored as conflicting/duplicated.", {})},
    {ErrUnresolvedHintName, mysql::Message("Unresolved name '%s' for %s hint", {})},
    {ErrInvalidFieldSize, mysql::Message("Invalid size for column '%s'.", {})},
    {ErrInvalidArgumentForLogarithm, mysql::Message("Invalid argument for logarithm", {})},
    {ErrAggregateOrderNonAggQuery,
     mysql::Message(
         "Expression #%d of ORDER BY contains aggregate function and applies to the result of a non-aggregated query",
         {})},
    {ErrIncorrectType, mysql::Message("Incorrect type for argument %s in function %s.", {})},
    {ErrFieldInOrderNotSelect, mysql::Message("Expression #%d of ORDER BY clause is not in SELECT list, references "
                                              "column '%s' which is not in SELECT list; this is incompatible with %s",
                                              {})},
    {ErrAggregateInOrderNotSelect, mysql::Message("Expression #%d of ORDER BY clause is not in SELECT list, contains "
                                                  "aggregate function; this is incompatible with %s",
                                                  {})},
    {ErrInvalidJSONData, mysql::Message("Invalid JSON data provided to function %s: %s", {})},
    {ErrInvalidJSONText, mysql::Message("Invalid JSON text: %-.192s", {0})},
    {ErrInvalidJSONPath, mysql::Message("Invalid JSON path expression %s.", {})},
    {ErrInvalidTypeForJSON,
     mysql::Message(
         "Invalid data type for JSON data in argument %d to function %s; a JSON string or JSON type is required.", {})},
    {ErrInvalidJSONPathWildcard,
     mysql::Message("In this situation, path expressions may not contain the * and ** tokens.", {})},
    {ErrInvalidJSONContainsPathType, mysql::Message("The second argument can only be either 'one' or 'all'.", {})},
    {ErrJSONUsedAsKey, mysql::Message("JSON column '%-.192s' cannot be used in key specification.", {})},
    {ErrJSONDocumentNULLKey, mysql::Message("JSON documents may not contain NULL member names.", {})},
    {ErrSecureTransportRequired,
     mysql::Message("Connections using insecure transport are prohibited while --require_secure_transport=ON.", {})},
    {ErrBadUser, mysql::Message("User %s does not exist.", {})},
    {ErrUserAlreadyExists, mysql::Message("User %s already exists.", {})},
    {ErrInvalidJSONPathArrayCell, mysql::Message("A path expression is not a path to a cell in an array.", {})},
    {ErrInvalidEncryptionOption, mysql::Message("Invalid encryption option.", {})},
    {ErrTooLongValueForType, mysql::Message("Too long enumeration/set value for column %s.", {})},
    {ErrPKIndexCantBeInvisible, mysql::Message("A primary key index cannot be invisible", {})},
    {ErrWindowNoSuchWindow, mysql::Message("Window name '%s' is not defined.", {})},
    {ErrWindowCircularityInWindowGraph, mysql::Message("There is a circularity in the window dependency graph.", {})},
    {ErrWindowNoChildPartitioning, mysql::Message("A window which depends on another cannot define partitioning.", {})},
    {ErrWindowNoInherentFrame,
     mysql::Message("Window '%s' has a frame definition, so cannot be referenced by another window.", {})},
    {ErrWindowNoRedefineOrderBy,
     mysql::Message("Window '%s' cannot inherit '%s' since both contain an ORDER BY clause.", {})},
    {ErrWindowFrameStartIllegal, mysql::Message("Window '%s': frame start cannot be UNBOUNDED FOLLOWING.", {})},
    {ErrWindowFrameEndIllegal, mysql::Message("Window '%s': frame end cannot be UNBOUNDED PRECEDING.", {})},
    {ErrWindowFrameIllegal,
     mysql::Message("Window '%s': frame start or end is negative, NULL or of non-integral type", {})},
    {ErrWindowRangeFrameOrderType, mysql::Message("Window '%s' with RANGE N PRECEDING/FOLLOWING frame requires exactly "
                                                  "one ORDER BY expression, of numeric or temporal type",
                                                  {})},
    {ErrWindowRangeFrameTemporalType,
     mysql::Message(
         "Window '%s' with RANGE frame has ORDER BY expression of datetime type. Only INTERVAL bound value allowed.",
         {})},
    {ErrWindowRangeFrameNumericType,
     mysql::Message(
         "Window '%s' with RANGE frame has ORDER BY expression of numeric type, INTERVAL bound value not allowed.",
         {})},
    {ErrWindowRangeBoundNotConstant, mysql::Message("Window '%s' has a non-constant frame bound.", {})},
    {ErrWindowDuplicateName, mysql::Message("Window '%s' is defined twice.", {})},
    {ErrWindowIllegalOrderBy, mysql::Message("Window '%s': ORDER BY or PARTITION BY uses legacy position indication "
                                             "which is not supported, use expression.",
                                             {})},
    {ErrWindowInvalidWindowFuncUse, mysql::Message("You cannot use the window function '%s' in this context.'", {})},
    {ErrWindowInvalidWindowFuncAliasUse,
     mysql::Message("You cannot use the alias '%s' of an expression containing a window function in this context.'",
                    {})},
    {ErrWindowNestedWindowFuncUseInWindowSpec,
     mysql::Message("You cannot nest a window function in the specification of window '%s'.", {})},
    {ErrWindowRowsIntervalUse, mysql::Message("Window '%s': INTERVAL can only be used with RANGE frames.", {})},
    {ErrWindowNoGroupOrderUnused,
     mysql::Message("ASC or DESC with GROUP BY isn't allowed with window functions; put ASC or DESC in ORDER BY", {})},
    {ErrWindowExplainJSON, mysql::Message("To get information about window functions use EXPLAIN FORMAT=JSON", {})},
    {ErrWindowFunctionIgnoresFrame,
     mysql::Message(
         "Window function '%s' ignores the frame clause of window '%s' and aggregates over the whole partition", {})},
    {ErrRoleNotGranted, mysql::Message("%s is not granted to %s", {})},
    {ErrMaxExecTimeExceeded, mysql::Message("Query execution was interrupted, max_execution_time exceeded.", {})},
    {ErrLockAcquireFailAndNoWaitSet,
     mysql::Message("Statement aborted because lock(s) could not be acquired immediately and NOWAIT is set.", {})},
    {ErrNotHintUpdatable, mysql::Message("Variable '%s' cannot be set using SET_VAR hint.", {})},
    {ErrDataTruncatedFunctionalIndex, mysql::Message("Data truncated for expression index '%s' at row %d", {})},
    {ErrDataOutOfRangeFunctionalIndex, mysql::Message("Value is out of range for expression index '%s' at row %d", {})},
    {ErrFunctionalIndexOnJSONOrGeometryFunction,
     mysql::Message("Cannot create an expression index on a function that returns a JSON or GEOMETRY value", {})},
    {ErrFunctionalIndexRefAutoIncrement,
     mysql::Message("Expression index '%s' cannot refer to an auto-increment column", {})},
    {ErrCannotDropColumnFunctionalIndex,
     mysql::Message("Cannot drop column '%s' because it is used by an expression index. In order to drop the column, "
                    "you must remove the expression index",
                    {})},
    {ErrFunctionalIndexPrimaryKey, mysql::Message("The primary key cannot be an expression index", {})},
    {ErrFunctionalIndexOnBlob,
     mysql::Message(
         "Cannot create an expression index on an expression that returns a BLOB or TEXT. Please consider using CAST",
         {})},
    {ErrFunctionalIndexFunctionIsNotAllowed,
     mysql::Message("Expression of expression index '%s' contains a disallowed function", {})},
    {ErrFulltextFunctionalIndex, mysql::Message("Fulltext expression index is not supported", {})},
    {ErrSpatialFunctionalIndex, mysql::Message("Spatial expression index is not supported", {})},
    {ErrWrongKeyColumnFunctionalIndex, mysql::Message("The used storage engine cannot index the expression '%s'", {})},
    {ErrFunctionalIndexOnField,
     mysql::Message("Expression index on a column is not supported. Consider using a regular index instead", {})},
    {ErrFKIncompatibleColumns,
     mysql::Message("Referencing column '%s' in foreign key constraint '%s' are incompatible", {})},
    {ErrFunctionalIndexRowValueIsNotAllowed,
     mysql::Message("Expression of expression index '%s' cannot refer to a row value", {})},
    {ErrDependentByFunctionalIndex,
     mysql::Message("Column '%s' has an expression index dependency and cannot be dropped or renamed", {})},
    {ErrInvalidJSONValueForFuncIndex, mysql::Message("Invalid JSON value for CAST for expression index '%s'", {})},
    {ErrJSONValueOutOfRangeForFuncIndex,
     mysql::Message("Out of range JSON value for CAST for expression index '%s'", {})},
    {ErrFunctionalIndexDataIsTooLong, mysql::Message("Data too long for expression index '%s'", {})},
    {ErrFunctionalIndexNotApplicable,
     mysql::Message("Cannot use expression index '%s' due to type or collation conversion", {})},
    {ErrUnsupportedConstraintCheck, mysql::Message("%s is not supported", {})},
    {ErrDynamicPrivilegeNotRegistered, mysql::Message("Dynamic privilege '%s' is not registered with the server.", {})},
    {ErrIllegalPrivilegeLevel, mysql::Message("Illegal privilege level specified for %s", {})},
    {ErrCTERecursiveRequiresUnion, mysql::Message("Recursive Common Table Expression '%s' should contain a UNION", {})},
    {ErrCTERecursiveRequiresNonRecursiveFirst,
     mysql::Message("Recursive Common Table Expression '%s' should have one or more non-recursive query blocks "
                    "followed by one or more recursive ones",
                    {})},
    {ErrCTERecursiveForbidsAggregation, mysql::Message("Recursive Common Table Expression '%s' can contain neither "
                                                       "aggregation nor window functions in recursive query block",
                                                       {})},
    {ErrCTERecursiveForbiddenJoinOrder,
     mysql::Message(
         "In recursive query block of Recursive Common Table Expression '%s', the recursive table must neither be in "
         "the right argument of a LEFT JOIN, nor be forced to be non-first with join order hints",
         {})},
    {ErrInvalidRequiresSingleReference,
     mysql::Message("In recursive query block of Recursive Common Table Expression '%s', the recursive table must be "
                    "referenced only once, and not in any subquery",
                    {})},
    {ErrCTEMaxRecursionDepth,
     mysql::Message(
         "Recursive query aborted after %d iterations. Try increasing @@cte_max_recursion_depth to a larger value",
         {})},
    // MariaDB errors.
    {ErrOnlyOneDefaultPartionAllowed, mysql::Message("Only one DEFAULT partition allowed", {})},
    {ErrWrongPartitionTypeExpectedSystemTime,
     mysql::Message("Wrong partitioning type, expected type: `SYSTEM_TIME`", {})},
    {ErrSystemVersioningWrongPartitions,
     mysql::Message("Wrong Partitions: must have at least one HISTORY and exactly one last CURRENT", {})},
    {ErrSequenceRunOut, mysql::Message("Sequence '%-.64s.%-.64s' has run out", {})},
    {ErrSequenceInvalidData, mysql::Message("Sequence '%-.64s.%-.64s' values are conflicting", {})},
    {ErrSequenceAccessFail, mysql::Message("Sequence '%-.64s.%-.64s' access error", {})},
    {ErrNotSequence, mysql::Message("'%-.64s.%-.64s' is not a SEQUENCE", {})},
    {ErrUnknownSequence, mysql::Message("Unknown SEQUENCE: '%-.300s'", {})},
    {ErrWrongInsertIntoSequence,
     mysql::Message("Wrong INSERT into a SEQUENCE. One can only do single table INSERT into a sequence object (like "
                    "with mysqldump).  If you want to change the SEQUENCE, use ALTER SEQUENCE instead.",
                    {})},
    {ErrSequenceInvalidTableStructure, mysql::Message("Sequence '%-.64s.%-.64s' table structure is invalid (%s)", {})},

    // TiDB errors.
    {ErrMemExceedThreshold, mysql::Message("%s holds %dB memory, exceeds threshold %dB.%s", {})},
    {ErrForUpdateCantRetry, mysql::Message("[%d] can not retry select for update statement", {})},
    {ErrAdminCheckTable, mysql::Message("TiDB admin check table failed.", {})},
    {ErrOptOnTemporaryTable, mysql::Message("`%s` is unsupported on temporary tables.", {})},
    {ErrDropTableOnTemporaryTable,
     mysql::Message("`drop global temporary table` can only drop global temporary table", {})},
    {ErrTxnTooLarge, mysql::Message("Transaction is too large, size: %d", {})},
    {ErrWriteConflictInTiDB, mysql::Message("Write conflict, txnStartTS %d is stale", {})},
    {ErrInvalidPluginID,
     mysql::Message(
         "Wrong plugin id: %s, valid plugin id is [name]-[version], both name and version should not contain '-'", {})},
    {ErrInvalidPluginManifest, mysql::Message("Cannot read plugin %s's manifest", {})},
    {ErrInvalidPluginName, mysql::Message("Plugin load with %s but got wrong name %s", {})},
    {ErrInvalidPluginVersion, mysql::Message("Plugin load with %s but got %s", {})},
    {ErrDuplicatePlugin, mysql::Message("Plugin [%s] is redeclared", {})},
    {ErrInvalidPluginSysVarName, mysql::Message("Plugin %s's sysVar %s must start with its plugin name %s", {})},
    {ErrRequireVersionCheckFail, mysql::Message("Plugin %s require %s be %v but got %v", {})},
    {ErrUnsupportedReloadPlugin, mysql::Message("Plugin %s isn't loaded so cannot be reloaded", {})},
    {ErrUnsupportedReloadPluginVar, mysql::Message("Reload plugin with different sysVar is unsupported %v", {})},
    {ErrTableLocked, mysql::Message("Table '%s' was locked in %s by %v", {})},
    {ErrNotExist, mysql::Message("Error: key not exist", {})},
    {ErrTxnRetryable, mysql::Message("Error: KV error safe to retry %s ", {0})},
    {ErrCannotSetNilValue, mysql::Message("can not set nil value", {})},
    {ErrInvalidTxn, mysql::Message("invalid transaction", {})},
    {ErrEntryTooLarge, mysql::Message("entry too large, the max entry size is %d, the size of data is %d", {})},
    {ErrNotImplemented, mysql::Message("not implemented", {})},
    {ErrInfoSchemaExpired, mysql::Message("Information schema is out of date: schema failed to update in 1 lease, "
                                          "please make sure TiDB can connect to TiKV",
                                          {})},
    {ErrInfoSchemaChanged, mysql::Message("Information schema is changed during the execution of the statement(for "
                                          "example, table definition may be updated by other DDL ran in parallel). If "
                                          "you see this error often, try increasing `tidb_max_delta_schema_count`",
                                          {})},
    {ErrBadNumber, mysql::Message("Bad Number", {})},
    {ErrCastAsSignedOverflow,
     mysql::Message("Cast to signed converted positive out-of-range integer to it's negative complement", {})},
    {ErrCastNegIntAsUnsigned,
     mysql::Message("Cast to unsigned converted negative integer to it's positive complement", {})},
    {ErrInvalidYearFormat, mysql::Message("invalid year format", {})},
    {ErrInvalidYear, mysql::Message("invalid year", {})},
    {ErrIncorrectDatetimeValue, mysql::Message("Incorrect datetime value: '%s'", {0})},
    {ErrInvalidTimeFormat, mysql::Message("invalid time format: '%v'", {0})},
    {ErrInvalidWeekModeFormat, mysql::Message("invalid week mode format: '%v'", {})},
    {ErrFieldGetDefaultFailed, mysql::Message("Field '%s' get default value fail", {})},
    {ErrIndexOutBound, mysql::Message("Index column %s offset out of bound, offset: %d, row: %v", {2})},
    {ErrUnsupportedOp, mysql::Message("operation not supported", {})},
    {ErrRowNotFound, mysql::Message("can not find the row: %s", {0})},
    {ErrTableStateCantNone, mysql::Message("table %s can't be in none state", {})},
    {ErrColumnStateCantNone, mysql::Message("column %s can't be in none state", {})},
    {ErrColumnStateNonPublic, mysql::Message("can not use non-public column", {})},
    {ErrIndexStateCantNone, mysql::Message("index %s can't be in none state", {})},
    {ErrInvalidRecordKey, mysql::Message("invalid record key", {})},
    {ErrUnsupportedValueForVar, mysql::Message("variable '%s' does not yet support value: %s", {})},
    {ErrUnsupportedIsolationLevel,
     mysql::Message(
         "The isolation level '%s' is not supported. Set tidb_skip_isolation_level_check=1 to skip this error", {})},
    {ErrInvalidDDLWorker, mysql::Message("Invalid DDL worker", {})},
    {ErrUnsupportedDDLOperation, mysql::Message("Unsupported %s", {})},
    {ErrNotOwner, mysql::Message("TiDB server is not a DDL owner", {})},
    {ErrCantDecodeRecord, mysql::Message("Cannot decode %s value, because %v", {})},
    {ErrInvalidDDLJob, mysql::Message("Invalid DDL job", {})},
    {ErrInvalidDDLJobFlag, mysql::Message("Invalid DDL job flag", {})},
    {ErrWaitReorgTimeout, mysql::Message("Timeout waiting for data reorganization", {})},
    {ErrInvalidStoreVersion, mysql::Message("Invalid storage current version: %d", {})},
    {ErrUnknownTypeLength, mysql::Message("Unknown length for type %d", {})},
    {ErrUnknownFractionLength, mysql::Message("Unknown length for type %d and fraction %d", {})},
    {ErrInvalidDDLJobVersion, mysql::Message("Version %d of DDL job is greater than current one: %d", {})},
    {ErrInvalidSplitRegionRanges, mysql::Message("Failed to split region ranges: %s", {})},
    {ErrReorgPanic, mysql::Message("Reorg worker panic", {})},
    {ErrInvalidDDLState, mysql::Message("Invalid %s state: %v", {})},
    {ErrCancelledDDLJob, mysql::Message("Cancelled DDL job", {})},
    {ErrRepairTable, mysql::Message("Failed to repair table: %s", {})},
    {ErrLoadPrivilege, mysql::Message("Load privilege table fail: %s", {})},
    {ErrInvalidPrivilegeType, mysql::Message("unknown privilege type %s", {})},
    {ErrUnknownFieldType, mysql::Message("unknown field type", {})},
    {ErrInvalidSequence, mysql::Message("invalid sequence", {})},
    {ErrInvalidType, mysql::Message("invalid type", {})},
    {ErrCantGetValidID, mysql::Message("Cannot get a valid auto-ID when retrying the statement", {})},
    {ErrCantSetToNull, mysql::Message("cannot set variable to null", {})},
    {ErrSnapshotTooOld, mysql::Message("snapshot is older than GC safe point %s", {})},
    {ErrInvalidTableID, mysql::Message("invalid TableID", {})},
    {ErrInvalidAutoRandom, mysql::Message("Invalid auto random: %s", {})},
    {ErrInvalidHashKeyFlag, mysql::Message("invalid encoded hash key flag", {})},
    {ErrInvalidListIndex, mysql::Message("invalid list index", {})},
    {ErrInvalidListMetaData, mysql::Message("invalid list meta data", {})},
    {ErrWriteOnSnapshot, mysql::Message("write on snapshot", {})},
    {ErrInvalidKey, mysql::Message("invalid key", {})},
    {ErrInvalidIndexKey, mysql::Message("invalid index key", {})},
    {ErrDataInConsistent, mysql::Message("index:%#v != record:%#v", {0, 1})},
    {ErrDDLReorgElementNotExist, mysql::Message("DDL reorg element does not exist", {})},
    {ErrDDLJobNotFound, mysql::Message("DDL Job:%v not found", {})},
    {ErrCancelFinishedDDLJob, mysql::Message("This job:%v is finished, so can't be cancelled", {})},
    {ErrCannotCancelDDLJob, mysql::Message("This job:%v is almost finished, can't be cancelled now", {})},
    {ErrUnknownAllocatorType, mysql::Message("Invalid allocator type", {})},
    {ErrAutoRandReadFailed, mysql::Message("Failed to read auto-random value from storage engine", {})},
    {ErrInvalidIncrementAndOffset, mysql::Message("Invalid auto_increment settings: auto_increment_increment: %d, "
                                                  "auto_increment_offset: %d, both of them must be in range [1..65535]",
                                                  {})},
    {ErrDataInConsistentExtraIndex, mysql::Message("handle %#v, index:%#v != record:%#v", {0, 1, 2})},
    {ErrDataInConsistentMisMatchIndex,
     mysql::Message("col %s, handle %#v, index:%#v != record:%#v, compare err:%#v", {1, 2, 3, 4})},

    {ErrWarnOptimizerHintInvalidInteger, mysql::Message("integer value is out of range in '%s'", {})},
    {ErrWarnOptimizerHintUnsupportedHint,
     mysql::Message("Optimizer hint %s is not supported by TiDB and is ignored", {})},
    {ErrWarnOptimizerHintInvalidToken, mysql::Message("Cannot use %s '%s' (tok = %d) in an optimizer hint", {})},
    {ErrWarnMemoryQuotaOverflow,
     mysql::Message("Max value of MEMORY_QUOTA is %d bytes, ignore this invalid limit", {})},
    {ErrWarnOptimizerHintParseError, mysql::Message("Optimizer hint syntax error at %v", {})},

    {ErrSequenceUnsupportedTableOption, mysql::Message("Unsupported sequence table-option %s", {})},
    {ErrColumnTypeUnsupportedNextValue, mysql::Message("Unsupported sequence default value for column type '%s'", {})},
    {ErrAddColumnWithSequenceAsDefault,
     mysql::Message("Unsupported using sequence as default value in add column '%s'", {})},
    {ErrUnsupportedType, mysql::Message("Unsupported type %T", {})},
    {ErrAnalyzeMissIndex, mysql::Message("Index '%s' in field list does not exist in table '%s'", {})},
    {ErrCartesianProductUnsupported, mysql::Message("Cartesian product is unsupported", {})},
    {ErrPreparedStmtNotFound, mysql::Message("Prepared statement not found", {})},
    {ErrWrongParamCount, mysql::Message("Wrong parameter count", {})},
    {ErrSchemaChanged, mysql::Message("Schema has changed", {})},
    {ErrUnknownPlan, mysql::Message("Unknown plan", {})},
    {ErrPrepareMulti, mysql::Message("Can not prepare multiple statements", {})},
    {ErrPrepareDDL, mysql::Message("Can not prepare DDL statements with parameters", {})},
    {ErrResultIsEmpty, mysql::Message("Result is empty", {})},
    {ErrBuildExecutor, mysql::Message("Failed to build executor", {})},
    {ErrBatchInsertFail, mysql::Message("Batch insert failed, please clean the table and try again.", {})},
    {ErrGetStartTS, mysql::Message("Can not get start ts", {})},
    {ErrPrivilegeCheckFail,
     mysql::Message("privilege check for '%s' fail",
                    {})},  // this error message should begin lowercased to be compatible with the test
    {ErrInvalidWildCard, mysql::Message("Wildcard fields without any table name appears in wrong place", {})},
    {ErrMixOfGroupFuncAndFieldsIncompatible,
     mysql::Message("In aggregated query without GROUP BY, expression #%d of SELECT list contains nonaggregated column "
                    "'%s'; this is incompatible with sql_mode=only_full_group_by",
                    {})},
    {ErrUnsupportedSecondArgumentType, mysql::Message("JSON_OBJECTAGG: unsupported second argument type %v", {})},
    {ErrLockExpire,
     mysql::Message(
         "TTL manager has timed out, pessimistic locks may expire, please commit or rollback this transaction", {})},
    {ErrTableOptionUnionUnsupported, mysql::Message("CREATE/ALTER table with union option is not supported", {})},
    {ErrTableOptionInsertMethodUnsupported,
     mysql::Message("CREATE/ALTER table with insert method option is not supported", {})},

    {ErrBRIEBackupFailed, mysql::Message("Backup failed: %s", {})},
    {ErrBRIERestoreFailed, mysql::Message("Restore failed: %s", {})},
    {ErrBRIEImportFailed, mysql::Message("Import failed: %s", {})},
    {ErrBRIEExportFailed, mysql::Message("Export failed: %s", {})},

    {ErrInvalidTableSample, mysql::Message("Invalid TABLESAMPLE: %s", {})},

    {ErrJSONObjectKeyTooLong,
     mysql::Message("TiDB does not yet support JSON objects with the key length >= 65536", {})},
    {ErrPartitionStatsMissing,
     mysql::Message("Build table: %s global-level stats failed due to missing partition-level stats", {})},
    {ErrNotSupportedWithSem,
     mysql::Message("Feature '%s' is not supported when security enhanced mode is enabled", {})},

    {ErrInvalidPlacementSpec, mysql::Message("Invalid placement policy '%s': %s", {})},
    {ErrPlacementPolicyCheck, mysql::Message("Placement policy didn't meet the constraint, reason: %s", {})},
    {ErrMultiStatementDisabled, mysql::Message("client has multi-statement capability disabled. Run SET GLOBAL "
                                               "tidb_multi_statement_mode='ON' after you understand the security risk",
                                               {})},
    {ErrAsOf, mysql::Message("invalid as of timestamp: %s", {})},
    {ErrVariableNoLongerSupported, mysql::Message("option '%s' is no longer supported. Reason: %s", {})},
    {ErrInvalidAttributesSpec, mysql::Message("Invalid attributes '%s': %s", {})},
    {ErrPlacementPolicyExists, mysql::Message("Placement policy '%-.192s' already exists", {})},
    {ErrPlacementPolicyNotExists, mysql::Message("Unknown placement policy '%-.192s'", {})},
    {ErrPlacementPolicyWithDirectOption,
     mysql::Message("Placement policy '%s' can't co-exist with direct placement options", {})},
    {ErrPlacementPolicyInUse, mysql::Message("Placement policy '%-.192s' is still in use", {})},

    // TiKV/PD errors.
    {ErrPDServerTimeout, mysql::Message("PD server timeout", {})},
    {ErrTiKVServerTimeout, mysql::Message("TiKV server timeout", {})},
    {ErrTiKVServerBusy, mysql::Message("TiKV server is busy", {})},
    {ErrTiFlashServerTimeout, mysql::Message("TiFlash server timeout", {})},
    {ErrTiFlashServerBusy, mysql::Message("TiFlash server is busy", {})},
    {ErrResolveLockTimeout, mysql::Message("Resolve lock timeout", {})},
    {ErrRegionUnavailable, mysql::Message("Region is unavailable", {})},
    {ErrGCTooEarly,
     mysql::Message("GC life time is shorter than transaction duration, transaction starts at %v, GC safe point is %v",
                    {})},
    {ErrWriteConflict,
     mysql::Message("Write conflict, txnStartTS=%d, conflictStartTS=%d, conflictCommitTS=%d, key=%s", {3})},
    {ErrTiKVStoreLimit, mysql::Message("Store token is up to the limit, store id = %d", {})},
    {ErrPrometheusAddrIsNotSet, mysql::Message("Prometheus address is not set in PD and etcd", {})},
    {ErrTiKVStaleCommand, mysql::Message("TiKV server reports stale command", {})},
    {ErrTiKVMaxTimestampNotSynced, mysql::Message("TiKV max timestamp is not synced", {})},
};

}